PROJECT INVENTORY 2025-02-07
Project: 
Timestamp: 2025-02-07 08:46:01
Root Directory: /Users/drjforrest/Development/DevProjects/WebDev/new-main/

--- README.md Contents ---
This is a [Next.js](https://nextjs.org) project bootstrapped with [`create-next-app`](https://nextjs.org/docs/app/api-reference/cli/create-next-app).

## Getting Started

First, run the development server:

```bash
npm run dev
# or
yarn dev
# or
pnpm dev
# or
bun dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

You can start editing the page by modifying `app/page.tsx`. The page auto-updates as you edit the file.

This project uses [`next/font`](https://nextjs.org/docs/app/building-your-application/optimizing/fonts) to automatically optimize and load [Geist](https://vercel.com/font), a new font family for Vercel.

## Learn More

To learn more about Next.js, take a look at the following resources:

- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.

You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js) - your feedback and contributions are welcome!

## Deploy on Vercel

The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.

Check out our [Next.js deployment documentation](https://nextjs.org/docs/app/building-your-application/deploying) for more details.

--- End of README.md ---

--- Begin Project Code ---

--- File: (Project Directory Structure) ---
├── README.md 
├── all-project-code_2025-02-07.txt 
├── next-env.d.ts 
├── next.config.cjs 
├── package-lock.json 
├── package.json 
├── postcss.config.mjs 
├── public 
│   ├── assets 
│   │   └── jamie-forrest-cv.pdf 
│   ├── file.svg 
│   ├── globe.svg 
│   ├── next.svg 
│   ├── projects 
│   │   ├── activate-africa.png 
│   │   ├── global-fund.png 
│   │   ├── momentum-health.png 
│   │   ├── rwanda-health.png 
│   │   └── together-trial.png 
│   ├── vercel.svg 
│   └── window.svg 
├── src 
│   ├── app 
│   │   ├── api 
│   │   │   └── contact 
│   │   │       └── route.ts 
│   │   ├── favicon.ico 
│   │   ├── globals.css 
│   │   ├── layout.tsx 
│   │   ├── page.tsx 
│   │   └── providers.tsx 
│   ├── components 
│   │   ├── BlogPreview.tsx 
│   │   ├── ContactForm.tsx 
│   │   ├── FeaturedWork.tsx 
│   │   ├── Hero.tsx 
│   │   ├── IconBanner.tsx 
│   │   ├── Navigation.tsx 
│   │   ├── SiteHeader.tsx 
│   │   ├── ThemeProvider.tsx 
│   │   ├── layout 
│   │   │   └── Navigation.tsx 
│   │   ├── providers 
│   │   │   └── ClientProvider.tsx 
│   │   ├── publication-dashboard 
│   │   │   ├── Focus.tsx 
│   │   │   ├── Impact.tsx 
│   │   │   ├── Timeline.tsx 
│   │   │   └── index.tsx 
│   │   ├── publications 
│   │   │   ├── focus.tsx 
│   │   │   ├── impact.tsx 
│   │   │   └── timeline.tsx 
│   │   ├── sections 
│   │   │   ├── CV.tsx 
│   │   │   ├── ProfessionalJourney.tsx 
│   │   │   ├── experience-timeline.tsx 
│   │   │   └── hero.tsx 
│   │   ├── theme 
│   │   │   └── theme-toggle.tsx 
│   │   └── ui 
│   │       ├── animated-card.tsx 
│   │       ├── animated-container.tsx 
│   │       ├── button.tsx 
│   │       ├── card.tsx 
│   │       ├── enhanced-tooltip.tsx 
│   │       ├── input.tsx 
│   │       ├── interactive-timeline.tsx 
│   │       ├── optimized-image.tsx 
│   │       ├── page-transition.tsx 
│   │       ├── project-carousel.tsx 
│   │       ├── publication-card.tsx 
│   │       ├── section-heading.tsx 
│   │       ├── skill-badge.tsx 
│   │       ├── tabs.tsx 
│   │       └── textarea.tsx 
│   ├── hooks 
│   │   └── use-scroll-animation.ts 
│   ├── styles 
│   │   ├── components.css 
│   │   ├── theme.css 
│   │   └── theme.ts 
│   └── types 
│       ├── cv.ts 
│       ├── publications.ts 
│       └── theme.ts 
├── tailwind.config.ts 
└── tsconfig.json 

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/next-env.d.ts (Timestamp: 2025-02-06 17:23:07) ---
/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/basic-features/typescript for more information.

--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/next-env.d.ts ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/tailwind.config.ts (Timestamp: 2025-02-06 03:27:22) ---
import type { Config } from 'tailwindcss'

const config: Config = {
  content: [
    './src/pages/**/*.{js,ts,jsx,tsx,mdx}',
    './src/components/**/*.{js,ts,jsx,tsx,mdx}',
    './src/app/**/*.{js,ts,jsx,tsx,mdx}',
  ],
  darkMode: 'class',
  theme: {
    extend: {
      colors: {
        background: 'rgb(var(--background) / <alpha-value>)',
        foreground: 'rgb(var(--foreground) / <alpha-value>)',
        primary: 'rgb(var(--primary) / <alpha-value>)',
        accent: 'rgb(var(--accent) / <alpha-value>)',
        success: 'rgb(var(--success) / <alpha-value>)',
        muted: 'rgb(var(--muted) / <alpha-value>)',
      },
      animation: {
        'fade-in': 'fadeIn 0.5s ease-out',
        'slide-up': 'slideUp 0.5s ease-out',
      },
      keyframes: {
        fadeIn: {
          '0%': { opacity: '0' },
          '100%': { opacity: '1' },
        },
        slideUp: {
          '0%': { transform: 'translateY(10px)', opacity: '0' },
          '100%': { transform: 'translateY(0)', opacity: '1' },
        },
      },
    },
  },
  plugins: [],
}

export default config
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/tailwind.config.ts ---

--- Skipping package-lock.json (Too large: 188.83 KB) ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/package.json (Timestamp: 2025-02-06 20:25:52) ---
{
  "name": "drjforrest-site",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "clean": "rm -rf .next node_modules package-lock.json && npm cache clean --force && npm install"
  },
  "dependencies": {
    "@radix-ui/react-tabs": "^1.1.3",
    "@types/nodemailer": "^6.4.17",
    "bad-words": "^4.0.0",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.1.0",
    "framer-motion": "11.0.5",
    "limiter": "^3.0.0",
    "lucide-react": "^0.330.0",
    "next": "14.1.0",
    "next-themes": "^0.4.4",
    "nodemailer": "^6.10.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "recharts": "^2.15.1",
    "tailwind-merge": "^2.6.0",
    "tailwindcss-animate": "^1.0.7"
  },
  "devDependencies": {
    "@svgr/webpack": "^8.1.0",
    "@types/node": "^20.11.0",
    "@types/react": "18.2.48",
    "@types/react-dom": "18.2.18",
    "autoprefixer": "^10.4.20",
    "postcss": "^8.4.32",
    "tailwindcss": "^3.4.1",
    "typescript": "^5.3.3"
  }
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/package.json ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/tsconfig.json (Timestamp: 2025-02-07 08:44:01) ---
{
  "compilerOptions": {
    "target": "ES2017",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./src/*", "./src/styles/*", "./src/components/*", "./src/lib/*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}

--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/tsconfig.json ---

--- Skipping together-trial.png (Too large: 589.64 KB) ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/types/cv.ts (Timestamp: 2025-02-06 06:42:45) ---
export interface CVEntryBase {
  title: string;
  organization: string;
  period: string;
  description: string;
}

export interface CVEntryProps extends CVEntryBase {
  index: number;
}

export interface PublicationEntry {
  title: string;
  journal: string;
  year: string;
  citation: string;
  doi?: string;
  impact?: string;
}

export interface AwardEntry {
  title: string;
  organization: string;
  year: string;
  amount?: string;
  description: string;
}

export interface SkillCategory {
  name: string;
  skills: string[];
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/types/cv.ts ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/types/theme.ts (Timestamp: 2025-02-06 18:15:18) ---
import { ReactNode } from 'react'

export interface ThemeProviderProps {
  children: ReactNode;
  attribute?: string;
  defaultTheme?: string;
  storageKey?: string;
  enableSystem?: boolean;
  disableTransitionOnChange?: boolean;
} 
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/types/theme.ts ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/types/publications.ts (Timestamp: 2025-02-06 06:47:40) ---
export interface TimelineData {
  year: string;
  count: number;
  total?: number;
}

export interface JournalImpact {
  name: string;
  count: number;
  tier: 'Highest Impact' | 'High Impact' | 'Peer Reviewed';
}

export interface ResearchFocus {
  name: string;
  papers: number;
}

export interface MilestoneMarker {
  year: string;
  label: string;
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/types/publications.ts ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/app/layout.tsx (Timestamp: 2025-02-06 20:27:48) ---
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import { ThemeProvider } from "@/components/ThemeProvider";
import { ClientProvider } from "@/components/providers/ClientProvider";
import { SiteHeader } from "@/components/SiteHeader";
import "@/styles/theme.css";
import "./globals.css";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Dr. Jamie I. Forrest - Global Health & Clinical Research",
  description: "Global health specialist and clinical research leader focused on health systems strengthening and digital innovation.",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body className={inter.className}>
        <ThemeProvider>
          <ClientProvider>
            <SiteHeader />
            <main className="pt-16">
              {children}
            </main>
          </ClientProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/app/layout.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/app/page.tsx (Timestamp: 2025-02-06 20:27:27) ---
import { Suspense } from 'react';
import { IconBanner } from "@/components/IconBanner";
import { Hero } from "@/components/Hero";
import { ProfessionalJourney } from "@/components/sections/ProfessionalJourney";
import { PublicationDashboard } from "@/components/publication-dashboard";
import { ContactForm } from "@/components/ContactForm";

export default function Home() {
  return (
    <div className="min-h-screen bg-background text-foreground">
      <Suspense fallback={<div>Loading...</div>}>
        <IconBanner />
      </Suspense>
      <Suspense fallback={<div>Loading...</div>}>
        <Hero />
      </Suspense>
      <Suspense fallback={<div>Loading...</div>}>
        <ProfessionalJourney />
      </Suspense>
      <Suspense fallback={<div>Loading...</div>}>
        <PublicationDashboard />
      </Suspense>
      <Suspense fallback={<div>Loading...</div>}>
        <ContactForm />
      </Suspense>
    </div>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/app/page.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/app/globals.css (Timestamp: 2025-02-06 20:53:35) ---
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
    :root {
        /* From your color palette */
        --primary: 26 58 92; /* Deep Blue */
        --accent: 214 40 40; /* Crimson Red */
        --success: 42 157 143; /* Emerald Green */
        --foreground: 43 45 66; /* Charcoal Gray */
        --background: 244 241 222; /* Ivory */
        --muted: 112 66 20; /* Earth Brown */
    }

    .dark {
        --primary: 42 157 143; /* Emerald Green becomes primary */
        --background: 43 45 66; /* Charcoal becomes background */
        --foreground: 244 241 222; /* Ivory becomes text */
        --muted: 214 40 40; /* Crimson becomes muted */
    }

    body {
        @apply bg-background text-foreground antialiased;
    }

    /* Base heading styles */
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        @apply font-bold tracking-tight text-foreground;
    }

    /* Focus styles */
    :focus-visible {
        @apply outline-2 outline-accent outline-offset-2;
    }

    /* Link styles */
    a:not(.unstyled) {
        @apply text-primary hover:text-primary/80 transition-colors;
    }
}

@layer components {
    .card {
        @apply bg-background rounded-lg shadow-md transition-transform duration-300 hover:translate-y-[-4px] hover:shadow-lg;
    }

    .button {
        @apply px-4 py-2 rounded-md font-medium transition-colors duration-200
           bg-primary text-background hover:bg-primary/90
           disabled:opacity-50 disabled:cursor-not-allowed;
    }

    .link {
        @apply text-primary hover:text-accent transition-colors
           underline-offset-4 hover:underline;
    }
}

/* Animations */
@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes slideUp {
    from {
        transform: translateY(10px);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/app/globals.css ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/app/providers.tsx (Timestamp: 2025-02-06 03:27:54) ---
'use client';

import { ThemeProvider } from 'next-themes';
import { ReactNode } from 'react';

export function Providers({ children }: { children: ReactNode }) {
  return (
    <ThemeProvider
      attribute="class"
      defaultTheme="system"
      enableSystem
      disableTransitionOnChange
    >
      {children}
    </ThemeProvider>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/app/providers.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/app/api/contact/route.ts (Timestamp: 2025-02-06 17:42:20) ---
import { NextResponse } from 'next/server';
import nodemailer from 'nodemailer';
import { 
  checkRateLimit, 
  validateEmail, 
  validateMessage,
  getClientIp 
} from '@/lib/contact-protection';

// Create transporter outside of the handler to reuse the connection
const transporter = nodemailer.createTransport({
  service: 'gmail',
  auth: {
    user: process.env.SMTP_EMAIL,
    pass: process.env.SMTP_PASSWORD,
  },
});

export async function POST(request: Request) {
  try {
    // Get client IP and check rate limit
    const clientIp = getClientIp();
    const isWithinLimit = await checkRateLimit(clientIp);
    
    if (!isWithinLimit) {
      return NextResponse.json(
        { error: 'Too many requests. Please try again later.' },
        { status: 429 }
      );
    }

    const body = await request.json();
    const { name, email, subject, message } = body;

    // Basic validation
    if (!name || !email || !subject || !message) {
      return NextResponse.json(
        { error: 'All fields are required' },
        { status: 400 }
      );
    }

    // Email validation
    if (!validateEmail(email)) {
      return NextResponse.json(
        { error: 'Invalid email address' },
        { status: 400 }
      );
    }

    // Message validation
    const messageValidation = validateMessage(message);
    if (!messageValidation.isValid) {
      return NextResponse.json(
        { error: messageValidation.error },
        { status: 400 }
      );
    }

    // Email content formatting
    const mailOptions = {
      from: process.env.SMTP_EMAIL,
      to: process.env.SMTP_EMAIL,
      subject: `Contact Form: ${subject}`,
      replyTo: email,
      text: `
Name: ${name}
Email: ${email}
Subject: ${subject}
IP Address: ${clientIp}

Message:
${message}
      `,
      html: `
<div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
  <h2 style="color: #333;">New Contact Form Submission</h2>
  <p><strong>From:</strong> ${name}</p>
  <p><strong>Email:</strong> ${email}</p>
  <p><strong>Subject:</strong> ${subject}</p>
  <p><strong>IP Address:</strong> ${clientIp}</p>
  <div style="margin-top: 20px;">
    <h3 style="color: #555;">Message:</h3>
    <p style="white-space: pre-wrap;">${message}</p>
  </div>
</div>
      `
    };

    // Send email
    await transporter.sendMail(mailOptions);

    return NextResponse.json(
      { message: 'Message sent successfully' },
        { 
          status: 200,
          headers: {
            'X-RateLimit-Remaining': '5',
            'X-RateLimit-Reset': '3600'
          }
        }
    );
  } catch (error) {
    console.error('Contact form error:', error);
    return NextResponse.json(
      { error: 'Failed to send message' },
      { status: 500 }
    );
  }
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/app/api/contact/route.ts ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/styles/theme.css (Timestamp: 2025-02-06 07:43:44) ---
:root {
  /* Light mode */
  .light {
    --background: rgb(244, 241, 222);  /* Ivory/Chiffon yellow from mainTheme */
    --foreground: rgb(43, 45, 66);     /* Charcoal from mainTheme */
    --primary: rgb(26, 58, 92);        /* Deep navy from mainTheme */
    --primary-light: rgb(42, 157, 143); /* Emerald from mainTheme */
    --surface: rgb(244, 241, 222);     /* Same as background */
    --surface-elevated: rgb(255, 255, 255);
    --surface-muted: rgb(237, 234, 215);
    --content: rgb(43, 45, 66);        /* Same as foreground */
    --content-muted: rgb(112, 66, 20); /* Warm brown from mainTheme */
    --border: rgb(226, 232, 240);
  }

  /* Dark mode */
  .dark {
    --background: rgb(43, 45, 66);     /* Charcoal background */
    --foreground: rgb(244, 241, 222);  /* Ivory text */
    --primary: rgb(42, 157, 143);      /* Emerald primary */
    --primary-light: rgb(26, 58, 92);  /* Navy becomes secondary */
    --surface: rgb(49, 51, 73);        /* Slightly lighter than background */
    --surface-elevated: rgb(55, 57, 82);
    --surface-muted: rgb(61, 63, 89);
    --content: rgb(244, 241, 222);     /* Same as foreground */
    --content-muted: rgb(112, 66, 20); /* Warm brown maintains grounding */
    --border: rgb(45, 55, 72);
  }
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/styles/theme.css ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/styles/theme.ts (Timestamp: 2025-02-06 03:33:32) ---
export const mainTheme = {
  name: 'Academic Portfolio',
  colors: {
    light: {
      primary: '26 58 92',   // Deep navy - authoritative
      accent: '114 83 52',   // Rich bronze - established
      success: '42 157 143', // Emerald - expertise
      foreground: '43 45 66', // Charcoal - clarity
      background: '244 241 222', // Ivory - academic
      muted: '112 66 20',    // Warm brown - grounding
    },
    dark: {
      primary: '42 157 143',  // Emerald takes focus
      accent: '114 83 52',    // Bronze maintains authority
      success: '26 58 92',    // Navy becomes secondary
      foreground: '244 241 222', // Ivory for text
      background: '43 45 66',  // Charcoal background
      muted: '112 66 20',     // Warm brown maintains grounding
    }
  },
  heroIcons: [
    {
      icon: 'GraduationCap',
      label: 'Academia',
      className: 'text-primary'
    },
    {
      icon: 'BookOpen',
      label: 'Publications',
      className: 'text-accent'
    },
    {
      icon: 'LineChart',
      label: 'Research',
      className: 'text-success'
    }
  ]
};
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/styles/theme.ts ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/styles/components.css (Timestamp: 2025-02-06 17:00:05) ---
/* 3D Card Effects */
.perspective {
  perspective: 2000px;
}

.preserve-3d {
  transform-style: preserve-3d;
}

.backface-hidden {
  backface-visibility: hidden;
}

.rotate-y-180 {
  transform: rotateY(180deg);
}

/* Timeline Styles */
.timeline-line {
  background: linear-gradient(
    to bottom,
    transparent,
    var(--primary) 10%,
    var(--primary) 90%,
    transparent
  );
}

/* Smooth Transitions */
.transition-height {
  transition-property: height, opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
}

/* Interactive Elements */
.hover-lift {
  transition: transform 0.2s ease-in-out;
}

.hover-lift:hover {
  transform: translateY(-4px);
}

/* Animation Utilities */
.animate-pulse-slow {
  animation: pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/styles/components.css ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/IconBanner.tsx (Timestamp: 2025-02-06 20:11:52) ---
'use client';

import { GraduationCap, PenTool, Globe } from "lucide-react";
import { motion } from "framer-motion";

const icons = [
  {
    icon: GraduationCap,
    label: "Academic",
    delay: 0.2,
  },
  {
    icon: PenTool,
    label: "Writer",
    delay: 0.3,
  },
  {
    icon: Globe,
    label: "Global Health",
    delay: 0.4,
  },
];

export function IconBanner() {
  return (
    <div className="container mx-auto px-4 py-6">
      <div className="flex justify-center gap-16 md:gap-24">
        {icons.map(({ icon: Icon, label, delay }) => (
          <motion.div
            key={label}
            initial={{ y: -20, opacity: 0 }}
            animate={{ y: 0, opacity: 1 }}
            transition={{ delay, duration: 0.5 }}
            className="flex flex-col items-center gap-2"
          >
            <div className="p-3 rounded-full bg-primary/10">
              <Icon className="w-6 h-6 text-primary" />
            </div>
            <span className="text-sm font-medium text-muted-foreground">
              {label}
            </span>
          </motion.div>
        ))}
      </div>
    </div>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/IconBanner.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/Hero.tsx (Timestamp: 2025-02-06 20:12:03) ---
'use client';

import { motion } from "framer-motion";
import { Button } from "@/components/ui/button";
import { ArrowRight } from "lucide-react";

export function Hero() {
  return (
    <section className="relative pt-32 pb-16">
      <div className="container mx-auto px-4">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          className="max-w-3xl mx-auto text-center"
        >
          <motion.h1
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.2, duration: 0.8 }}
            className="text-4xl md:text-5xl lg:text-6xl font-bold tracking-tight"
          >
            Building Solutions for{" "}
            <span className="text-primary">Global Health</span>
          </motion.h1>
          
          <motion.p
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.4, duration: 0.8 }}
            className="mt-6 text-lg text-muted-foreground"
          >
            Combining academic research, technical innovation, and global health expertise 
            to create meaningful impact in healthcare delivery and outcomes.
          </motion.p>

          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.6, duration: 0.8 }}
            className="mt-8 flex justify-center gap-4"
          >
            <Button size="lg">
              View Publications <ArrowRight className="ml-2 w-4 h-4" />
            </Button>
            <Button size="lg" variant="outline">
              Explore Projects
            </Button>
          </motion.div>
        </motion.div>
      </div>

      {/* Decorative gradient blur */}
      <div className="absolute inset-0 -z-10 h-full w-full bg-white dark:bg-black">
        <div className="absolute inset-0 bg-gradient-to-r from-primary/20 via-background to-primary/20 opacity-20 blur-3xl" />
      </div>
    </section>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/Hero.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/SiteHeader.tsx (Timestamp: 2025-02-06 15:14:48) ---
'use client';

import { Navigation } from "@/components/Navigation";
import { ThemeToggle } from "@/components/theme/theme-toggle";
import { motion } from "framer-motion";

export function SiteHeader() {
  return (
    <motion.header
      initial={{ y: -100, opacity: 0 }}
      animate={{ y: 0, opacity: 1 }}
      transition={{ duration: 0.5, ease: "easeOut" }}
      className="fixed top-0 left-0 right-0 z-50 bg-background/80 backdrop-blur-lg border-b border-border"
    >
      <div className="container mx-auto px-4">
        <div className="flex items-center justify-between h-16">
          <motion.div
            initial={{ opacity: 0, x: -20 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ delay: 0.2, duration: 0.5 }}
          >
            <Navigation />
          </motion.div>

          <motion.div
            initial={{ opacity: 0, x: 20 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ delay: 0.3, duration: 0.5 }}
            className="flex items-center gap-4"
          >
            <ThemeToggle />
          </motion.div>
        </div>
      </div>
    </motion.header>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/SiteHeader.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/FeaturedWork.tsx (Timestamp: 2025-02-06 17:07:16) ---
"use client";

import { ProjectCarousel } from "@/components/ui/project-carousel";

const projects = [
  {
    title: "The Momentum Health Study",
    period: "2011 - 2015",
    image: "/projects/momentum-health.png",
    description: "Canada's largest gay men's health study, investigating the social and behavioral factors influencing HIV transmission and prevention among gay, bisexual, and other men who have sex with men in Vancouver.",
    expandedDescription: "Led the coordination of this groundbreaking cohort study as its first project coordinator, managing complex data collection, participant engagement, and stakeholder relationships. The study integrated biological testing with comprehensive behavioral and social network data collection to understand the evolving HIV epidemic among urban gay men.",
    impact: "The study's findings directly informed HIV prevention strategies in British Columbia and provided the foundation for my doctoral research on the role of social networking technologies in sexual health. Research outputs contributed to policy changes in HIV testing frequency recommendations and PrEP implementation guidelines.",
    link: "https://www.momentumstudy.ca"
  },
  {
    title: "Global Fund Program Evaluations",
    period: "2016 - 2018",
    image: "/projects/global-fund.png",
    description: "Co-led comprehensive evaluations of HIV, TB, and Malaria program service delivery in Guyana, Haiti, and Cameroon, focusing on key population access and program effectiveness.",
    expandedDescription: "Conducted in-depth assessments of national health programs supported by the Global Fund, examining service delivery models, access barriers, and program outcomes. The evaluations involved extensive stakeholder engagement, data analysis, and field visits to understand implementation challenges and opportunities.",
    impact: "Evaluation findings led to significant improvements in program design and implementation, resulting in enhanced service delivery for key populations. Recommendations were incorporated into subsequent funding cycles and national strategic plans."
  },
  {
    title: "Rwanda Health Analytics Platform",
    period: "2017 - 2019",
    image: "/projects/rwanda-health.png",
    description: "Led the development and implementation of a Gates Foundation-funded data visualization platform integrating multiple health data sources to facilitate evidence-based decision-making in Rwanda.",
    expandedDescription: "Directed the technical development and stakeholder engagement process for this innovative platform, which unified disparate health data sources into a comprehensive analytics tool. The project involved close collaboration with the Ministry of Health and local health facilities to ensure relevance and sustainability.",
    impact: "The platform transformed Rwanda's health data ecosystem, enabling real-time monitoring of health indicators and improved resource allocation. It continues to support evidence-based policy making at the national level."
  },
  {
    title: "TOGETHER Trial",
    period: "2020 - 2022",
    image: "/projects/together-trial.png",
    description: "Contributed to the adaptive platform randomized clinical trial for COVID-19 therapeutics in Brazil, evaluating multiple treatment options including Fluvoxamine and Interferon Lambda.",
    expandedDescription: "The trial pioneered an adaptive platform design that allowed for rapid evaluation of multiple COVID-19 treatments while maintaining rigorous scientific standards. This innovative approach enabled faster identification of effective treatments during the pandemic.",
    impact: "The trial's findings on Fluvoxamine and Interferon Lambda provided crucial evidence for COVID-19 treatment options, particularly in resource-limited settings. Results were published in leading medical journals and influenced treatment guidelines.",
    link: "https://www.togethertrial.com"
  },
  {
    title: "ACTIVATE Africa Initiative",
    period: "2023 - Present",
    image: "/projects/activate-africa.png",
    description: "An ongoing partnership initiative working with governments, industry, and academia to build sustainable capacity for clinical research and data science across Africa.",
    expandedDescription: "This collaborative project aims to strengthen the foundation for clinical research and data science capabilities within African institutions. The initiative focuses on sustainable capacity development through partnership-based approaches and local ownership.",
    impact: "While still in its early stages, the initiative has established key partnerships and begun developing frameworks for long-term capacity building in clinical research and data science across participating African countries."
  }
];

export function FeaturedWork() {
  return (
    <section className="py-20" id="work">
      <div className="container mx-auto px-6">
        <div className="text-center mb-16 space-y-4">
          <h2 className="text-3xl font-bold">Project Highlights</h2>
          <p className="text-content-muted max-w-2xl mx-auto">
            A selection of impactful research and public health initiatives spanning global health, 
            clinical trials, and data science innovation.
          </p>
        </div>
        
        <ProjectCarousel projects={projects} />
      </div>
    </section>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/FeaturedWork.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ContactForm.tsx (Timestamp: 2025-02-06 15:07:14) ---
"use client";

import { useState } from "react";
import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Mail, Linkedin, Github, Send, Loader2 } from "lucide-react";
import Link from "next/link";
import { motion } from "framer-motion";
import { trackFormSubmission, trackExternalLink } from '@/lib/analytics';

interface FormData {
  name: string;
  email: string;
  subject: string;
  message: string;
}

export function ContactForm() {
  const [formData, setFormData] = useState<FormData>({
    name: "",
    email: "",
    subject: "",
    message: ""
  });
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [submitStatus, setSubmitStatus] = useState<'idle' | 'success' | 'error'>('idle');

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsSubmitting(true);
    setSubmitStatus('idle');

    try {
      const response = await fetch('/api/contact', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(formData),
      });

      if (!response.ok) throw new Error('Failed to send message');

      setSubmitStatus('success');
      setFormData({ name: "", email: "", subject: "", message: "" });
      trackFormSubmission('contact', true);
    } catch (error) {
      setSubmitStatus('error');
      trackFormSubmission('contact', false);
    } finally {
      setIsSubmitting(false);
    }
  };

  const handleExternalLink = (platform: string, url: string) => {
    trackExternalLink(platform);
    window.open(url, '_blank');
  };

  return (
    <section className="py-20 bg-muted/50" id="contact">
      <div className="container px-4">
        <motion.div 
          className="max-w-4xl mx-auto"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5 }}
        >
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold mb-4">Get in Touch</h2>
            <p className="text-content-muted max-w-2xl mx-auto">
              I'm always interested in connecting with colleagues and exploring new opportunities
              in global health, clinical research, and data science.
            </p>
          </div>

          <div className="grid md:grid-cols-[2fr,1fr] gap-8">
            {/* Contact Form */}
            <Card className="p-6 bg-surface-elevated elevation-1 hover:elevation-2 transition-all duration-300">
              <form onSubmit={handleSubmit} className="space-y-6">
                <div className="grid grid-cols-1 gap-6">
                  <div>
                    <label htmlFor="name" className="block text-sm font-medium mb-2">
                      Name
                    </label>
                    <Input
                      id="name"
                      value={formData.name}
                      onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}
                      required
                      className="bg-background"
                    />
                  </div>
                  
                  <div>
                    <label htmlFor="email" className="block text-sm font-medium mb-2">
                      Email
                    </label>
                    <Input
                      id="email"
                      type="email"
                      value={formData.email}
                      onChange={(e) => setFormData(prev => ({ ...prev, email: e.target.value }))}
                      required
                      className="bg-background"
                    />
                  </div>
                  
                  <div>
                    <label htmlFor="subject" className="block text-sm font-medium mb-2">
                      Subject
                    </label>
                    <Input
                      id="subject"
                      value={formData.subject}
                      onChange={(e) => setFormData(prev => ({ ...prev, subject: e.target.value }))}
                      required
                      className="bg-background"
                    />
                  </div>
                  
                  <div>
                    <label htmlFor="message" className="block text-sm font-medium mb-2">
                      Message
                    </label>
                    <Textarea
                      id="message"
                      rows={6}
                      value={formData.message}
                      onChange={(e) => setFormData(prev => ({ ...prev, message: e.target.value }))}
                      required
                      className="bg-background"
                    />
                  </div>
                </div>

                <Button 
                  type="submit"
                  className="w-full"
                  disabled={isSubmitting}
                >
                  {isSubmitting ? (
                    <>
                      <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                      Sending...
                    </>
                  ) : (
                    <>
                      <Send className="mr-2 h-4 w-4" />
                      Send Message
                    </>
                  )}
                </Button>

                {submitStatus === 'success' && (
                  <motion.p 
                    className="text-green-500 text-sm text-center"
                    initial={{ opacity: 0, y: 10 }}
                    animate={{ opacity: 1, y: 0 }}
                  >
                    Message sent successfully! I'll get back to you soon.
                  </motion.p>
                )}

                {submitStatus === 'error' && (
                  <motion.p 
                    className="text-red-500 text-sm text-center"
                    initial={{ opacity: 0, y: 10 }}
                    animate={{ opacity: 1, y: 0 }}
                  >
                    There was an error sending your message. Please try again.
                  </motion.p>
                )}
              </form>
            </Card>

            {/* Contact Info */}
            <Card className="p-6 bg-surface-elevated elevation-1 hover:elevation-2 transition-all duration-300">
              <div className="space-y-8">
                <div>
                  <h3 className="text-lg font-semibold mb-4">Contact Information</h3>
                  <div className="space-y-4">
                    <button
                      onClick={() => handleExternalLink('email', 'mailto:jamie@drjforrest.com')}
                      className="w-full flex items-center gap-3 p-2 rounded-lg hover:bg-muted transition-colors"
                    >
                      <Mail className="h-5 w-5 text-primary" />
                      <span>jamie@drjforrest.com</span>
                    </button>
                    
                    <button
                      onClick={() => handleExternalLink('linkedin', 'https://www.linkedin.com/in/jamie_forrest')}
                      className="w-full flex items-center gap-3 p-2 rounded-lg hover:bg-muted transition-colors"
                    >
                      <Linkedin className="h-5 w-5 text-primary" />
                      <span>Connect on LinkedIn</span>
                    </button>

                    <button
                      onClick={() => handleExternalLink('github', 'https://github.com/drjforrest')}
                      className="w-full flex items-center gap-3 p-2 rounded-lg hover:bg-muted transition-colors"
                    >
                      <Github className="h-5 w-5 text-primary" />
                      <span>GitHub Profile</span>
                    </button>
                  </div>
                </div>

                <div>
                  <h3 className="text-lg font-semibold mb-4">Looking to collaborate?</h3>
                  <p className="text-content-muted">
                    I'm open to discussing opportunities in:
                  </p>
                  <ul className="mt-2 space-y-2 text-content-muted">
                    <li className="flex items-center gap-2">
                      <span className="w-1.5 h-1.5 rounded-full bg-primary"></span>
                      Clinical Research Leadership
                    </li>
                    <li className="flex items-center gap-2">
                      <span className="w-1.5 h-1.5 rounded-full bg-primary"></span>
                      Global Health Projects
                    </li>
                    <li className="flex items-center gap-2">
                      <span className="w-1.5 h-1.5 rounded-full bg-primary"></span>
                      Data Science Initiatives
                    </li>
                    <li className="flex items-center gap-2">
                      <span className="w-1.5 h-1.5 rounded-full bg-primary"></span>
                      Health Systems Strengthening
                    </li>
                  </ul>
                </div>

                <div>
                  <h3 className="text-lg font-semibold mb-4">More Resources</h3>
                  <div className="space-y-2">
                    <button
                      onClick={() => handleExternalLink('blog', 'https://blog.drjforrest.com')}
                      className="w-full text-left text-primary hover:underline"
                    >
                      Read my blog →
                    </button>
                    <button
                      onClick={() => handleExternalLink('apps', 'https://apps.drjforrest.com')}
                      className="w-full text-left text-primary hover:underline"
                    >
                      Check out my apps →
                    </button>
                  </div>
                </div>
              </div>
            </Card>
          </div>
        </motion.div>
      </div>
    </section>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ContactForm.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ThemeProvider.tsx (Timestamp: 2025-02-06 18:23:39) ---
"use client";

import * as React from "react";
import { ThemeProvider as NextThemesProvider } from "next-themes";

export function ThemeProvider({ children }: { children: React.ReactNode }) {
  return (
    <NextThemesProvider
      attribute="class"
      defaultTheme="system"
      enableSystem
      disableTransitionOnChange
    >
      {children}
    </NextThemesProvider>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ThemeProvider.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/Navigation.tsx (Timestamp: 2025-02-06 07:28:48) ---
"use client";

import Link from "next/link";
import { Button } from "@/components/ui/button";
import { Github } from "lucide-react";

export function Navigation() {
  return (
    <header className="fixed top-0 left-0 right-0 z-50 bg-background/80 backdrop-blur-sm border-b border-border">
      <div className="container mx-auto px-4">
        <div className="flex items-center justify-between h-16">
          <Link href="/" className="font-semibold text-lg">
            DrJForrest
          </Link>

          <nav className="hidden md:flex items-center gap-6">
            <Link 
              href="https://blog.drjforrest.com" 
              className="text-content-muted hover:text-content transition-colors"
              target="_blank"
              rel="noopener noreferrer"
            >
              Blog
            </Link>
            <Link 
              href="https://apps.drjforrest.com"
              className="text-content-muted hover:text-content transition-colors"
              target="_blank"
              rel="noopener noreferrer"
            >
              Apps
            </Link>
            <Link 
              href="/#publications"
              className="text-content-muted hover:text-content transition-colors"
              scroll={true}
            >
              Publications
            </Link>
            <Link 
              href="/#contact"
              className="text-content-muted hover:text-content transition-colors"
              scroll={true}
            >
              Contact
            </Link>
          </nav>

          <div className="flex items-center gap-4">
            <Link
              href="https://github.com/drjforrest"
              target="_blank"
              rel="noopener noreferrer"
            >
              <Button variant="ghost" size="icon">
                <Github className="h-5 w-5" />
              </Button>
            </Link>
          </div>
        </div>
      </div>
    </header>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/Navigation.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/BlogPreview.tsx (Timestamp: 2025-02-06 18:00:37) ---
"use client";

import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import Link from "next/link";
import { ArrowRight } from "lucide-react";
import { motion } from "framer-motion";

interface BlogPostPreviewProps {
  date: string;
  title: string;
  description: string;
  href: string;
  index: number;
}

function BlogPostPreview({ date, title, description, href, index }: BlogPostPreviewProps) {
  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5, delay: index * 0.1 }}
    >
      <Card className="bg-surface-elevated/95 backdrop-blur p-6 hover:elevation-2 transition-all duration-300 h-full flex flex-col">
        <div className="text-sm text-primary mb-2">{date}</div>
        <h3 className="text-xl font-semibold mb-2">{title}</h3>
        <p className="text-content-muted mb-4 flex-grow">{description}</p>
        <Link 
          href={`https://blog.drjforrest.com${href}`}
          target="_blank"
          rel="noopener noreferrer"
          className="inline-flex items-center text-primary hover:text-primary/90 gap-2 group"
        >
          Read More
          <ArrowRight className="h-4 w-4 group-hover:translate-x-1 transition-transform" />
        </Link>
      </Card>
    </motion.div>
  );
}

export function BlogPreview() {
  const posts = [
    {
      date: "February 1, 2024",
      title: "Agenda 2063: The Digital Transformation of a Continent",
      description: "Exploring Africa's digital transformation journey through the lens of Agenda 2063's strategic framework and implementation progress.",
      href: "/blog/agenda-2063"
    },
    {
      date: "January 25, 2024",
      title: "The AI Revolution in Africa",
      description: "Examining the unprecedented opportunities and transformative potential of artificial intelligence across African markets.",
      href: "/blog/ai-future"
    },
    {
      date: "January 15, 2024",
      title: "Navigating Digital Transformation Risks",
      description: "Critical analysis of challenges and potential pitfalls in Africa's digital transformation journey.",
      href: "/blog/transformation-risks"
    }
  ];

  return (
    <section className="py-20" id="blog">
      <div className="container mx-auto px-6">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5 }}
        >
          <Card className="bg-surface-elevated/95 backdrop-blur p-8 mb-8">
            <div className="flex justify-between items-center mb-12">
              <div>
                <h2 className="text-3xl font-bold mb-4">Recent Blog Posts</h2>
                <p className="text-content-muted max-w-3xl">
                  Exploring the intersection of global health, digital innovation, and clinical research.
                </p>
              </div>
              <Button 
                className="hidden md:flex items-center gap-2"
                variant="outline"
                asChild
              >
                <Link 
                  href="https://blog.drjforrest.com"
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  View All Posts
                  <ArrowRight className="h-4 w-4" />
                </Link>
              </Button>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
              {posts.map((post, index) => (
                <BlogPostPreview 
                  key={post.href}
                  {...post}
                  index={index}
                />
              ))}
            </div>

            <div className="mt-8 md:hidden">
              <Button 
                className="w-full flex items-center justify-center gap-2"
                variant="outline"
                asChild
              >
                <Link 
                  href="https://blog.drjforrest.com"
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  View All Posts
                  <ArrowRight className="h-4 w-4" />
                </Link>
              </Button>
            </div>
          </Card>
        </motion.div>
      </div>
    </section>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/BlogPreview.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/project-carousel.tsx (Timestamp: 2025-02-06 18:25:30) ---
'use client';

import { Card } from '@/components/ui/card';
import { OptimizedImage } from '@/components/ui/optimized-image';
import { Button } from '@/components/ui/button';
import { ArrowLeft, ArrowRight, ExternalLink } from 'lucide-react';
import { useState, useCallback } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import Link from 'next/link';
import { useScrollAnimation } from '@/hooks/use-scroll-animation';

interface Project {
  title: string;
  period: string;
  description: string;
  expandedDescription: string;
  impact?: string;
  image: string;
  link?: string;
  tags?: string[];
}

interface ProjectCarouselProps {
  projects: Project[];
}

export function ProjectCarousel({ projects }: ProjectCarouselProps) {
  const [currentIndex, setCurrentIndex] = useState(0);
  const [direction, setDirection] = useState(0);
  const [isExpanded, setIsExpanded] = useState(false);
  const { ref, isVisible } = useScrollAnimation();

  const slideVariants = {
    enter: (direction: number) => ({
      x: direction > 0 ? 1000 : -1000,
      opacity: 0
    }),
    center: {
      zIndex: 1,
      x: 0,
      opacity: 1
    },
    exit: (direction: number) => ({
      zIndex: 0,
      x: direction < 0 ? 1000 : -1000,
      opacity: 0
    })
  };

  const paginate = useCallback((newDirection: number) => {
    setDirection(newDirection);
    setCurrentIndex((prevIndex) => {
      let newIndex = prevIndex + newDirection;
      if (newIndex < 0) newIndex = projects.length - 1;
      if (newIndex >= projects.length) newIndex = 0;
      return newIndex;
    });
    setIsExpanded(false);
  }, [projects.length]);

  const currentProject = projects[currentIndex];

  return (
    <motion.div
      ref={ref}
      initial={{ opacity: 0, y: 20 }}
      animate={isVisible ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
      transition={{ duration: 0.5 }}
      className="relative"
    >
      <Card className="bg-surface-elevated/95 backdrop-blur overflow-hidden transition-shadow duration-300 hover:elevation-3">
        <div className="flex flex-col lg:flex-row">
          {/* Image Section */}
          <div className="relative w-full lg:w-1/2 aspect-video lg:aspect-auto">
            <AnimatePresence initial={false} custom={direction}>
              <motion.div
                key={currentIndex}
                custom={direction}
                variants={slideVariants}
                initial="enter"
                animate="center"
                exit="exit"
                transition={{
                  x: { type: "spring", stiffness: 300, damping: 30 },
                  opacity: { duration: 0.2 }
                }}
                className="absolute inset-0"
              >
                <OptimizedImage
                  src={currentProject.image}
                  alt={currentProject.title}
                  width={800}
                  height={600}
                  className="w-full h-full object-cover"
                />
              </motion.div>
            </AnimatePresence>
          </div>

          {/* Content Section */}
          <div className="p-6 lg:p-8 flex flex-col lg:w-1/2">
            <AnimatePresence mode="wait">
              <motion.div
                key={currentIndex}
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                exit={{ opacity: 0, y: -20 }}
                transition={{ duration: 0.3 }}
              >
                <div className="mb-2 text-primary">{currentProject.period}</div>
                <h3 className="text-2xl font-bold mb-4">{currentProject.title}</h3>
                
                <div className="prose prose-sm dark:prose-invert">
                  <p>{isExpanded ? currentProject.expandedDescription : currentProject.description}</p>
                  {currentProject.impact && isExpanded && (
                    <motion.div
                      initial={{ opacity: 0, height: 0 }}
                      animate={{ opacity: 1, height: 'auto' }}
                      exit={{ opacity: 0, height: 0 }}
                      transition={{ duration: 0.3 }}
                    >
                      <h4 className="text-lg font-semibold mt-4">Impact</h4>
                      <p>{currentProject.impact}</p>
                    </motion.div>
                  )}
                </div>

                <div className="mt-6 flex flex-wrap gap-4">
                  <Button
                    variant="outline"
                    onClick={() => setIsExpanded(!isExpanded)}
                    className="group"
                  >
                    <span>{isExpanded ? 'Show Less' : 'Read More'}</span>
                  </Button>
                  
                  {currentProject.link && (
                    <Button asChild>
                      <Link 
                        href={currentProject.link}
                        target="_blank"
                        rel="noopener noreferrer"
                        className="inline-flex items-center gap-2 group"
                      >
                        Visit Project
                        <ExternalLink className="w-4 h-4 group-hover:translate-x-1 transition-transform" />
                      </Link>
                    </Button>
                  )}
                </div>
              </motion.div>
            </AnimatePresence>
          </div>
        </div>
      </Card>

      {/* Navigation Controls */}
      <div className="absolute inset-y-0 left-0 right-0 flex items-center justify-between pointer-events-none px-4">
        <Button
          variant="ghost"
          size="icon"
          className="pointer-events-auto bg-background/20 backdrop-blur hover:bg-background/40 transition-colors"
          onClick={() => paginate(-1)}
        >
          <ArrowLeft className="h-4 w-4" />
        </Button>
        <Button
          variant="ghost"
          size="icon"
          className="pointer-events-auto bg-background/20 backdrop-blur hover:bg-background/40 transition-colors"
          onClick={() => paginate(1)}
        >
          <ArrowRight className="h-4 w-4" />
        </Button>
      </div>

      {/* Progress Indicators */}
      <div className="absolute bottom-4 left-1/2 -translate-x-1/2 flex gap-2">
        {projects.map((_, index) => (
          <button
            key={index}
            className={`w-2 h-2 rounded-full transition-all duration-300 ${
              index === currentIndex 
                ? 'bg-primary scale-125' 
                : 'bg-primary/30 hover:bg-primary/50'
            }`}
            onClick={() => {
              setDirection(index > currentIndex ? 1 : -1);
              setCurrentIndex(index);
            }}
          />
        ))}
      </div>
    </motion.div>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/project-carousel.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/tabs.tsx (Timestamp: 2025-02-06 18:08:41) ---
'use client';

import * as React from 'react';
import * as TabsPrimitive from '@radix-ui/react-tabs';
import { motion } from 'framer-motion';
import { cn } from '@/lib/utils';

const Tabs = TabsPrimitive.Root;

const TabsList = React.forwardRef<
  React.ElementRef<typeof TabsPrimitive.List>,
  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>
>(({ className, ...props }, ref) => (
  <TabsPrimitive.List
    ref={ref}
    className={cn(
      'inline-flex items-center justify-center rounded-lg bg-muted/5 p-1',
      className
    )}
    {...props}
  />
));
TabsList.displayName = TabsPrimitive.List.displayName;

const TabsTrigger = React.forwardRef<
  React.ElementRef<typeof TabsPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>
>(({ className, children, ...props }, ref) => (
  <TabsPrimitive.Trigger
    ref={ref}
    className={cn(
      'inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-primary data-[state=active]:text-primary-foreground data-[state=active]:shadow-sm',
      className
    )}
    {...props}
  >
    <motion.div
      initial={{ opacity: 0, y: 5 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.2 }}
    >
      {children}
    </motion.div>
  </TabsPrimitive.Trigger>
));
TabsTrigger.displayName = TabsPrimitive.Trigger.displayName;

const TabsContent = React.forwardRef<
  React.ElementRef<typeof TabsPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>
>(({ className, children, ...props }, ref) => (
  <TabsPrimitive.Content
    ref={ref}
    className={cn(
      'mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',
      className
    )}
    {...props}
  >
    <motion.div
      initial={{ opacity: 0, y: 10 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.3 }}
    >
      {children}
    </motion.div>
  </TabsPrimitive.Content>
));
TabsContent.displayName = TabsPrimitive.Content.displayName;

export { Tabs, TabsList, TabsTrigger, TabsContent };
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/tabs.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/card.tsx (Timestamp: 2025-02-06 19:40:44) ---
'use client';

import React from 'react';

interface CardProps {
  children: React.ReactNode;
  className?: string;
}

export function Card({ children, className = "" }: CardProps) {
  return (
    <div className={`rounded-lg border border-border bg-card shadow-sm ${className}`}>
      {children}
    </div>
  );
}

export interface CardContentProps {
  children: React.ReactNode;
  className?: string;
}

export function CardContent({ children, className = "" }: CardContentProps) {
  return (
    <div className={`p-6 ${className}`}>
      {children}
    </div>
  );
}

--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/card.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/animated-card.tsx (Timestamp: 2025-02-06 15:15:10) ---
'use client';

import { motion } from 'framer-motion';
import { Card } from '@/components/ui/card';
import { useScrollAnimation } from '@/hooks/use-scroll-animation';
import { cn } from '@/lib/utils';

interface AnimatedCardProps {
  children: React.ReactNode;
  className?: string;
  delay?: number;
  hover?: boolean;
}

export function AnimatedCard({ children, className, delay = 0, hover = true }: AnimatedCardProps) {
  const { ref, isVisible } = useScrollAnimation();

  return (
    <motion.div
      ref={ref}
      initial={{ opacity: 0, y: 20 }}
      animate={isVisible ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
      transition={{ duration: 0.5, delay }}
      whileHover={hover ? { y: -5, transition: { duration: 0.2 } } : undefined}
    >
      <Card 
        className={cn(
          "bg-surface-elevated/95 backdrop-blur transition-all duration-300",
          hover && "hover:elevation-3",
          className
        )}
      >
        {children}
      </Card>
    </motion.div>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/animated-card.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/publication-card.tsx (Timestamp: 2025-02-06 16:59:42) ---
'use client';

import { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { ExternalLink, Book, Award, Calendar } from 'lucide-react';

interface PublicationCardProps {
  title: string;
  journal: string;
  year: string;
  impact: number;
  citation: string;
  doi?: string;
  abstract?: string;
}

export function PublicationCard({
  title,
  journal,
  year,
  impact,
  citation,
  doi,
  abstract
}: PublicationCardProps) {
  const [isFlipped, setIsFlipped] = useState(false);

  return (
    <div className="relative h-[300px] w-full perspective">
      <motion.div
        className="w-full h-full relative preserve-3d"
        initial={false}
        animate={{ rotateY: isFlipped ? 180 : 0 }}
        transition={{ duration: 0.6, type: "spring", stiffness: 300, damping: 30 }}
      >
        {/* Front of card */}
        <Card className="absolute inset-0 backface-hidden p-6 flex flex-col bg-surface-elevated/95 backdrop-blur hover:elevation-3 transition-shadow duration-300">
          <div className="flex justify-between items-start mb-4">
            <div className="flex items-center gap-2 text-primary">
              <Book className="h-4 w-4" />
              <span className="text-sm">{year}</span>
            </div>
            {impact && (
              <div className="flex items-center gap-2 text-primary">
                <Award className="h-4 w-4" />
                <span className="text-sm">Impact: {impact}</span>
              </div>
            )}
          </div>

          <h3 className="text-lg font-semibold mb-2 line-clamp-2">{title}</h3>
          <p className="text-content-muted text-sm mb-4 italic">{journal}</p>

          <div className="mt-auto flex justify-between items-center">
            <Button
              variant="ghost"
              size="sm"
              onClick={() => setIsFlipped(true)}
            >
              View Details
            </Button>
            {doi && (
              <Button
                variant="outline"
                size="sm"
                className="gap-2"
                asChild
              >
                <a 
                  href={`https://doi.org/${doi}`}
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  <ExternalLink className="h-4 w-4" />
                  DOI
                </a>
              </Button>
            )}
          </div>
        </Card>

        {/* Back of card */}
        <Card className="absolute inset-0 backface-hidden p-6 flex flex-col bg-surface-elevated/95 backdrop-blur rotate-y-180">
          <div className="flex-1 overflow-y-auto">
            <div className="text-sm text-content-muted mb-4">
              <h4 className="font-medium text-content mb-2">Citation</h4>
              <p>{citation}</p>
            </div>
            
            {abstract && (
              <div className="text-sm text-content-muted">
                <h4 className="font-medium text-content mb-2">Abstract</h4>
                <p>{abstract}</p>
              </div>
            )}
          </div>

          <Button
            variant="ghost"
            size="sm"
            className="mt-4"
            onClick={() => setIsFlipped(false)}
          >
            Back to Overview
          </Button>
        </Card>
      </motion.div>
    </div>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/publication-card.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/optimized-image.tsx (Timestamp: 2025-02-06 19:35:32) ---
'use client';

import Image from 'next/image';
import { useState } from 'react';
import { cn } from '@/lib/utils';

interface OptimizedImageProps {
  src: string;
  alt: string;
  width: number;
  height: number;
  className?: string;
}

export function OptimizedImage({
  src,
  alt,
  width,
  height,
  className
}: OptimizedImageProps) {
  const [isLoading, setIsLoading] = useState(true);

  return (
    <div className={cn(
      'overflow-hidden',
      isLoading ? 'animate-pulse bg-muted' : '',
      className
    )}>
      <Image
        src={src}
        alt={alt}
        width={width}
        height={height}
        className={cn(
          'duration-700 ease-in-out',
          isLoading ? 'scale-110 blur-lg' : 'scale-100 blur-0'
        )}
        onLoad={() => setIsLoading(false)}
      />
    </div>
  );
}

--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/optimized-image.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/skill-badge.tsx (Timestamp: 2025-02-06 15:15:02) ---
'use client';

import { motion } from 'framer-motion';

interface SkillBadgeProps {
  skill: string;
  index: number;
}

export function SkillBadge({ skill, index }: SkillBadgeProps) {
  return (
    <motion.span
      initial={{ opacity: 0, scale: 0.8 }}
      animate={{ opacity: 1, scale: 1 }}
      transition={{
        duration: 0.3,
        delay: index * 0.1,
        type: "spring",
        stiffness: 200,
        damping: 15
      }}
      whileHover={{ scale: 1.1 }}
      whileTap={{ scale: 0.95 }}
      className="px-3 py-1 bg-primary/10 text-primary rounded-full text-sm inline-flex items-center gap-2 hover:bg-primary/20 transition-colors"
    >
      {skill}
    </motion.span>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/skill-badge.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/enhanced-tooltip.tsx (Timestamp: 2025-02-06 06:47:48) ---
interface EnhancedTooltipProps {
  active?: boolean;
  payload?: any[];
  label?: string;
  solutions?: Record<string, string>;
  formatter?: (value: number, name: string, props: any) => string | [string, string];
}

export function EnhancedTooltip({ 
  active, 
  payload, 
  label,
  solutions = {},
  formatter
}: EnhancedTooltipProps) {
  if (!active || !payload) return null;

  return (
    <div className="bg-background border border-border rounded-lg shadow-lg p-3">
      <p className="text-sm font-medium mb-2">{label}</p>
      {payload.map((entry, index) => {
        const formattedValue = formatter 
          ? formatter(entry.value, entry.name, entry.payload)
          : entry.value;
        
        const [value, description] = Array.isArray(formattedValue) 
          ? formattedValue 
          : [formattedValue, solutions[entry.dataKey] || entry.name];

        return (
          <div key={index} className="text-sm">
            <span className="inline-block w-3 h-3 rounded-full mr-2" style={{ backgroundColor: entry.color }}></span>
            <span className="font-medium">{value}</span>
            <span className="text-content-muted ml-2">{description}</span>
          </div>
        );
      })}
    </div>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/enhanced-tooltip.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/page-transition.tsx (Timestamp: 2025-02-06 15:15:15) ---
'use client';

import { motion } from 'framer-motion';

interface PageTransitionProps {
  children: React.ReactNode;
}

const variants = {
  hidden: { opacity: 0, x: 0, y: 20 },
  enter: { opacity: 1, x: 0, y: 0 },
  exit: { opacity: 0, x: 0, y: 20 }
};

export function PageTransition({ children }: PageTransitionProps) {
  return (
    <motion.main
      variants={variants}
      initial="hidden"
      animate="enter"
      exit="exit"
      transition={{ type: "linear", duration: 0.5 }}
    >
      {children}
    </motion.main>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/page-transition.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/section-heading.tsx (Timestamp: 2025-02-06 15:14:56) ---
'use client';

import { motion } from 'framer-motion';
import { useScrollAnimation } from '@/hooks/use-scroll-animation';

interface SectionHeadingProps {
  title: string;
  subtitle?: string;
  align?: 'left' | 'center' | 'right';
}

export function SectionHeading({ title, subtitle, align = 'left' }: SectionHeadingProps) {
  const { ref, isVisible } = useScrollAnimation();

  const alignmentClasses = {
    left: 'text-left',
    center: 'text-center',
    right: 'text-right',
  };

  return (
    <motion.div
      ref={ref}
      className={`${alignmentClasses[align]} mb-12`}
    >
      <motion.h2
        initial={{ opacity: 0, y: 20 }}
        animate={isVisible ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
        transition={{ duration: 0.5 }}
        className="text-3xl font-bold mb-4"
      >
        {title}
      </motion.h2>
      {subtitle && (
        <motion.p
          initial={{ opacity: 0, y: 20 }}
          animate={isVisible ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
          transition={{ duration: 0.5, delay: 0.2 }}
          className="text-content-muted max-w-2xl mx-auto"
        >
          {subtitle}
        </motion.p>
      )}
    </motion.div>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/section-heading.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/button.tsx (Timestamp: 2025-02-06 19:36:08) ---
'use client';

import React from 'react';

interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {
  className?: string;
  variant?: 'default' | 'ghost' | 'outline';
  size?: 'default' | 'icon' | 'sm';
  children: React.ReactNode;
  asChild?: boolean;
}

export function Button({ variant = 'default', size = 'default', children, className = '', asChild, ...props }: ButtonProps) {
  return (
    <button 
      className={`rounded-md ${className}`}
      {...props}
    >
      {children}
    </button>
  );
}

--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/button.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/textarea.tsx (Timestamp: 2025-02-06 18:19:46) ---
import * as React from "react"
import { cn } from "@/lib/utils"

export interface TextareaProps
  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}

const Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(
  ({ className, ...props }, ref) => {
    return (
      <textarea
        className={cn(
          "flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2",
          "text-sm ring-offset-background placeholder:text-muted-foreground",
          "focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring",
          "focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
          className
        )}
        ref={ref}
        {...props}
      />
    )
  }
)
Textarea.displayName = "Textarea"

export { Textarea } 
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/textarea.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/input.tsx (Timestamp: 2025-02-06 18:19:46) ---
import * as React from "react"
import { cn } from "@/lib/utils"

export interface InputProps
  extends React.InputHTMLAttributes<HTMLInputElement> {}

const Input = React.forwardRef<HTMLInputElement, InputProps>(
  ({ className, type, ...props }, ref) => {
    return (
      <input
        type={type}
        className={cn(
          "flex h-10 w-full rounded-md border border-input bg-background px-3 py-2",
          "text-sm ring-offset-background file:border-0 file:bg-transparent",
          "file:text-sm file:font-medium placeholder:text-muted-foreground",
          "focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring",
          "focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
          className
        )}
        ref={ref}
        {...props}
      />
    )
  }
)
Input.displayName = "Input"

export { Input } 
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/input.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/interactive-timeline.tsx (Timestamp: 2025-02-06 18:24:31) ---
'use client';

import { motion, AnimatePresence } from 'framer-motion';
import { Card } from '@/components/ui/card';
import { useState } from 'react';
import { Calendar, Award, ArrowRight } from 'lucide-react';
import { cn } from '@/lib/utils';

interface TimelineEvent {
  year: string;
  title: string;
  description: string;
  type: 'publication' | 'award' | 'milestone';
  impact?: string;
}

interface InteractiveTimelineProps {
  events: TimelineEvent[];
}

interface CardProps extends React.HTMLAttributes<HTMLDivElement> {
  className?: string;
}

export function InteractiveTimeline({ events }: InteractiveTimelineProps) {
  const [selectedEvent, setSelectedEvent] = useState<TimelineEvent | null>(null);

  const sortedEvents = [...events].sort((a, b) => 
    parseInt(b.year) - parseInt(a.year)
  );

  return (
    <div className="relative">
      {/* Timeline line */}
      <div className="absolute left-[2.25rem] top-0 bottom-0 w-px bg-border" />

      {/* Events */}
      <div className="space-y-8">
        {sortedEvents.map((event, index) => (
          <motion.div
            key={`${event.year}-${index}`}
            initial={{ opacity: 0, x: -20 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ delay: index * 0.1 }}
            className="relative pl-16"
          >
            {/* Year marker */}
            <motion.div
              className="absolute left-0 w-[1.125rem] h-[1.125rem] rounded-full bg-primary"
              whileHover={{ scale: 1.2 }}
              transition={{ type: "spring", stiffness: 300, damping: 20 }}
            />

            <button
              className="w-full text-left"
              onClick={() => setSelectedEvent(selectedEvent?.year === event.year ? null : event)}
            >
              <Card
                className={cn(
                  "p-6 bg-surface-elevated/95 backdrop-blur cursor-pointer hover:elevation-3 transition-all duration-300",
                  selectedEvent?.year === event.year ? 'elevation-3' : ''
                )}
              >
                <div className="flex justify-between items-start">
                  <div className="flex items-center gap-2 text-primary">
                    {event.type === 'award' ? (
                      <Award className="h-4 w-4" />
                    ) : (
                      <Calendar className="h-4 w-4" />
                    )}
                    <span className="text-sm font-medium">{event.year}</span>
                  </div>
                  
                  {event.type === 'milestone' && (
                    <span className="text-xs px-2 py-1 rounded-full bg-primary/10 text-primary">
                      Milestone
                    </span>
                  )}
                </div>

                <h3 className="text-lg font-semibold mt-2">{event.title}</h3>

                <AnimatePresence>
                  {selectedEvent?.year === event.year && (
                    <motion.div
                      initial={{ opacity: 0, height: 0 }}
                      animate={{ opacity: 1, height: 'auto' }}
                      exit={{ opacity: 0, height: 0 }}
                      transition={{ duration: 0.3 }}
                      className="mt-4"
                    >
                      <p className="text-content-muted">{event.description}</p>
                      {event.impact && (
                        <div className="mt-4 p-4 rounded-lg bg-primary/5">
                          <h4 className="text-sm font-medium mb-2">Impact</h4>
                          <p className="text-sm text-content-muted">{event.impact}</p>
                        </div>
                      )}
                    </motion.div>
                  )}
                </AnimatePresence>

                <motion.div
                  className="mt-4 flex items-center gap-2 text-primary text-sm"
                  animate={{ 
                    rotate: selectedEvent?.year === event.year ? 90 : 0 
                  }}
                >
                  <ArrowRight className="h-4 w-4" />
                  <span>{selectedEvent?.year === event.year ? 'Show Less' : 'Learn More'}</span>
                </motion.div>
              </Card>
            </button>
          </motion.div>
        ))}
      </div>
    </div>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/interactive-timeline.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/animated-container.tsx (Timestamp: 2025-02-06 15:13:34) ---
'use client';

import { motion } from 'framer-motion';
import { useScrollAnimation } from '@/hooks/use-scroll-animation';
import { cn } from '@/lib/utils';

interface AnimatedContainerProps {
  children: React.ReactNode;
  className?: string;
  delay?: number;
}

export function AnimatedContainer({ children, className, delay = 0 }: AnimatedContainerProps) {
  const { ref, isVisible } = useScrollAnimation();

  return (
    <motion.div
      ref={ref}
      initial={{ opacity: 0, y: 20 }}
      animate={isVisible ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
      transition={{ duration: 0.5, delay }}
      className={cn(className)}
    >
      {children}
    </motion.div>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/ui/animated-container.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/sections/hero.tsx (Timestamp: 2025-02-06 03:44:48) ---
'use client';

import { motion } from 'framer-motion';
import { GraduationCap, BookOpen, LineChart } from 'lucide-react';
import Link from 'next/link';
import { mainTheme } from '@/styles/theme';

export function Hero() {
  return (
    <section className="relative min-h-[calc(100vh-4rem)] flex items-center">
      {/* Professional background pattern */}
      <div 
        className="fixed inset-0 bg-[url('/patterns/circuit-board.svg')] bg-repeat opacity-[0.02] dark:opacity-[0.03] pointer-events-none"
        aria-hidden="true"
      />

      {/* Content */}
      <div className="container relative z-10 mx-auto px-6">
        <div className="max-w-5xl mx-auto">
          {/* Hero Icons */}
          <motion.div 
            className="flex items-center justify-center gap-4 mb-12"
            initial={{ scale: 0.8, opacity: 0 }}
            animate={{ scale: 1, opacity: 1 }}
            transition={{ duration: 0.5 }}
          >
            <div className="p-4 bg-primary/10 rounded-2xl">
              <GraduationCap className="w-10 h-10 text-primary" />
            </div>
            <div className="p-4 bg-accent/10 rounded-2xl">
              <BookOpen className="w-10 h-10 text-accent" />
            </div>
            <div className="p-4 bg-success/10 rounded-2xl">
              <LineChart className="w-10 h-10 text-success" />
            </div>
          </motion.div>

          {/* Text Content */}
          <motion.div 
            className="text-center space-y-6"
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.2, duration: 0.5 }}
          >
            <h1 className="text-4xl md:text-5xl lg:text-6xl font-bold leading-tight">
              Strengthening Health Systems Through Digital Innovation
            </h1>
            <p className="text-xl text-foreground/70 max-w-3xl mx-auto">
              Building bridges between clinical research, data science, and health systems across Africa
            </p>

            {/* Call to Action */}
            <motion.div 
              className="flex flex-col sm:flex-row gap-4 pt-8 justify-center"
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 0.4, duration: 0.5 }}
            >
              <Link 
                href="#publications"
                className="inline-flex items-center justify-center px-6 py-3 rounded-lg
                         bg-primary text-background font-medium
                         hover:bg-primary/90 transition-colors duration-200"
              >
                View Publications
              </Link>
              <Link 
                href="#contact"
                className="inline-flex items-center justify-center px-6 py-3 rounded-lg
                         border border-primary/20 text-primary font-medium
                         hover:bg-primary/5 hover:border-primary/30 transition-colors duration-200"
              >
                Get in Touch
              </Link>
            </motion.div>
          </motion.div>

          {/* Scroll Indicator */}
          <motion.div
            className="absolute bottom-8 left-1/2 transform -translate-x-1/2"
            initial={{ opacity: 0, y: -10 }}
            animate={{ opacity: 0.5, y: 0 }}
            transition={{ 
              delay: 1,
              duration: 1,
              repeat: Infinity,
              repeatType: "reverse"
            }}
          >
            <div className="w-6 h-10 border-2 border-foreground/20 rounded-full flex justify-center">
              <div className="w-1 h-2 bg-foreground/20 rounded-full mt-2" />
            </div>
          </motion.div>
        </div>
      </div>
    </section>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/sections/hero.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/sections/experience-timeline.tsx (Timestamp: 2025-02-06 18:21:28) ---
'use client';

import { motion } from 'framer-motion';
import { FileText, GraduationCap, Building2, BookOpen, BarChart } from 'lucide-react';

interface TimelineEntryProps {
  year: string;
  title: string;
  organization: string;
  description: string;
  highlights?: string[];
  type: 'experience' | 'education' | 'publication';
  index: number;
}

function TimelineEntry({ 
  year, 
  title, 
  organization, 
  description, 
  highlights,
  type,
  index 
}: TimelineEntryProps) {
  const getIcon = () => {
    switch (type) {
      case 'education':
        return <GraduationCap className="w-6 h-6" />;
      case 'publication':
        return <BookOpen className="w-6 h-6" />;
      default:
        return <Building2 className="w-6 h-6" />;
    }
  };

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5, delay: index * 0.1 }}
      className="relative pl-8 pb-12 last:pb-0"
    >
      {/* Timeline line */}
      <div className="absolute left-0 top-0 bottom-0 w-px bg-primary/20" />
      
      {/* Timeline dot */}
      <div className="absolute left-[-12px] top-0 w-6 h-6 rounded-full bg-background border-2 border-primary flex items-center justify-center text-primary">
        {getIcon()}
      </div>

      {/* Content */}
      <div className="bg-background/50 backdrop-blur-sm rounded-2xl border border-foreground/10 p-6 shadow-lg hover:shadow-xl transition-all duration-300 hover:border-primary/20">
        <div className="text-sm font-medium text-primary mb-2">{year}</div>
        <h3 className="text-xl font-bold text-foreground mb-1">{title}</h3>
        <div className="text-foreground/70 font-medium mb-3">{organization}</div>
        <p className="text-foreground/60 mb-4">{description}</p>
        
        {highlights && (
          <div className="space-y-2">
            {highlights.map((highlight, i) => (
              <motion.div
                key={i}
                initial={{ opacity: 0, x: -10 }}
                animate={{ opacity: 1, x: 0 }}
                transition={{ delay: 0.5 + (i * 0.1) }}
                className="flex items-start gap-2 text-sm text-foreground/70"
              >
                <FileText className="w-4 h-4 mt-0.5 text-accent" />
                <span>{highlight}</span>
              </motion.div>
            ))}
          </div>
        )}
      </div>
    </motion.div>
  );
}

export function ExperienceTimeline() {
  const timelineEntries: TimelineEntryProps[] = [
    {
      year: '2023 - Present',
      title: 'Research & Strategy Lead',
      organization: 'Purpose Africa – Addis Ababa | Vancouver (Remote)',
      description: 'Leading pan-African clinical research and data science initiatives.',
      highlights: [
        'Authored comprehensive clinical research strategies and frameworks',
        'Led development of technical documentation and research protocols',
        'Managed publication strategy for multi-country research findings'
      ],
      type: 'experience',
      index: 0
    },
    {
      year: '2022',
      title: 'Major Publication Achievement',
      organization: 'TOGETHER Trial',
      description: 'Led writing team for significant COVID-19 therapeutic findings.',
      highlights: [
        'Published in high-impact medical journals',
        'Coordinated multi-author submissions and revisions',
        'Developed clinical trial documentation standards'
      ],
      type: 'publication',
      index: 1
    },
    {
      year: '2021 - 2023',
      title: 'Chief Partnerships Officer',
      organization: 'Purpose Life Sciences',
      description: 'Led strategic partnership expansion of clinical trials.',
      highlights: [
        'Directed medical writing team for clinical trial documentation',
        'Established publication strategy for trial outcomes',
        'Developed SOPs for clinical documentation'
      ],
      type: 'experience',
      index: 2
    },
    {
      year: '2017 - 2021',
      title: 'Ph.D. in Population & Public Health',
      organization: 'University of British Columbia, Faculty of Medicine',
      description: 'Doctoral research with extensive publication output.',
      highlights: [
        'Published multiple peer-reviewed articles as lead author',
        'Developed clinical research protocols',
        'Technical writing for grant applications and ethics submissions'
      ],
      type: 'education',
      index: 3
    },
  ];

  return (
    <section className="py-20 relative">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
        className="container mx-auto px-6"
      >
        <div className="max-w-4xl mx-auto">
          <div className="flex items-center gap-3 mb-12">
            <BarChart className="w-8 h-8 text-primary" />
            <h2 className="text-3xl font-bold text-foreground">Professional Journey</h2>
          </div>

          <div className="space-y-8">
            {timelineEntries.map((entry, index) => (
              <TimelineEntry 
                key={entry.title}
                year={entry.year}
                title={entry.title}
                organization={entry.organization}
                description={entry.description}
                highlights={entry.highlights}
                type={entry.type}
                index={index}
              />
            ))}
          </div>
        </div>
      </motion.div>
    </section>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/sections/experience-timeline.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/sections/CV.tsx (Timestamp: 2025-02-06 19:45:43) ---
"use client";

import { Building2, GraduationCap, BookOpen, Award, Binary } from "lucide-react";
import { motion } from "framer-motion";
import { Card, CardContent } from "@/components/ui/card";
import { type CVEntryProps, type PublicationEntry, type AwardEntry, type SkillCategory } from "@/types/cv";

function CVEntry({ title, organization, period, description, index }: CVEntryProps) {
  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5, delay: index * 0.1 }}
    >
      <Card className="bg-surface-elevated/95 backdrop-blur mb-8 hover:elevation-2 transition-all duration-300">
        <CardContent>
          <h3 className="text-xl font-semibold text-content">{title}</h3>
          <div className="text-primary mb-2">{organization}</div>
          <div className="text-sm text-content-muted mb-2">{period}</div>
          <p className="text-content-muted">{description}</p>
        </CardContent>
      </Card>
    </motion.div>
  );
}

function PublicationCard({ title, journal, year, citation, doi, impact }: PublicationEntry) {
  return (
    <Card className="bg-surface-elevated/95 backdrop-blur mb-6 hover:elevation-2 transition-all duration-300">
      <CardContent>
        <h4 className="text-lg font-medium text-content">{title}</h4>
        <div className="text-primary italic mb-2">{journal}</div>
        <div className="text-sm text-content-muted mb-2">{year}</div>
        <p className="text-content-muted text-sm">{citation}</p>
        {doi && (
          <a 
            href={`https://doi.org/${doi}`}
            target="_blank"
            rel="noopener noreferrer" 
            className="text-primary hover:underline text-sm mt-2 inline-block"
          >
            DOI: {doi}
          </a>
        )}
        {impact && (
          <div className="text-sm text-content-muted mt-2">
            Impact Factor: {impact}
          </div>
        )}
      </CardContent>
    </Card>
  );
}

function AwardCard({ title, organization, year, amount, description }: AwardEntry) {
  return (
    <Card className="bg-surface-elevated/95 backdrop-blur mb-6 hover:elevation-2 transition-all duration-300">
      <CardContent>
        <h4 className="text-lg font-medium text-content">{title}</h4>
        <div className="text-primary mb-1">{organization}</div>
        <div className="text-sm text-content-muted mb-2">{year}</div>
        {amount && (
          <div className="text-sm font-medium text-primary mb-2">{amount}</div>
        )}
        <p className="text-content-muted">{description}</p>
      </CardContent>
    </Card>
  );
}

function SkillsCard({ name, skills }: SkillCategory) {
  return (
    <Card className="bg-surface-elevated/95 backdrop-blur mb-6 hover:elevation-2 transition-all duration-300">
      <CardContent>
        <h4 className="text-lg font-medium text-content mb-4">{name}</h4>
        <div className="flex flex-wrap gap-2">
          {skills.map((skill, index) => (
            <span
              key={index}
              className="px-3 py-1 bg-primary/10 text-primary rounded-full text-sm"
            >
              {skill}
            </span>
          ))}
        </div>
      </CardContent>
    </Card>
  );
}

export function CV() {
  const experience = [
    {
      title: "Research & Strategy Lead",
      organization: "Purpose Africa – Addis Ababa, Ethiopia | Vancouver, Canada (Remote)",
      period: "2023 - Present",
      description: "Leading strategic planning, resource mobilization, and results framework for pan-African clinical research and data science capacity-development initiative led by African country partners.",
    },
    {
      title: "Chief Partnerships Officer",
      organization: "Platform Life Sciences - Vancouver, Canada",
      period: "2021 - 2023",
      description: "Led strategic partnership expansion of the TOGETHER adaptive platform clinical trial for COVID-19 therapeutics.",
    },
    {
      title: "Director of Global Health Strategy",
      organization: "Cytel - Vancouver, Canada",
      period: "2019 - 2020",
      description: "Developed & implement strategic initiatives in clinical research with partners in East Africa, South Africa, and Brazil.",
    },
    {
      title: "Managing Director, East Africa",
      organization: "MTEK Sciences - Kigali, Rwanda",
      period: "2017 - 2020",
      description: "Expanded business operations into East Africa, delivering technical guidance & critical resources to government and implementing partners for initiatives optimizing data use for evidence-based decision-making.",
    },
  ];
  
  const education = [
    {
      title: "Ph.D. in Population & Public Health",
      organization: "University of British Columbia, Faculty of Medicine",
      period: "2017 - 2021",
      description: "Doctoral research on health and social networking technologies in harder-to-reach populations.",
    },
    {
      title: "M.P.H. in Global Health",
      organization: "Simon Fraser University, Faculty of Health Sciences",
      period: "2007 - 2009",
      description: "Practicum partnership with the Perinatal HIV Research Institute in Soweto, South Africa.",
    },
    {
      title: "B.Sc. in Microbiology",
      organization: "University of Guelph",
      period: "2003 - 2007",
      description: "Focus on molecular biology and immunology.",
    }
  ];

  const publications: PublicationEntry[] = [
    {
      title: "Resilient clinical trial infrastructure in response to the COVID-19 pandemic",
      journal: "American Journal of Hygiene and Tropical Medicine",
      year: "2022",
      citation: "Forrest et al. (2022). Resilient clinical trial infrastructure in response to the COVID-19 pandemic: Lessons learned from the TOGETHER randomized platform clinical trial. Am J Hyg Trop Med, 106(4), 1423-1431.",
      doi: "10.1093/ajhtm/example",
      impact: "5.432"
    },
    {
      title: "Effect of early treatment with fluvoxamine on risk of emergency care and hospitalization among patients with COVID-19",
      journal: "Lancet Global Health",
      year: "2021",
      citation: "Forrest et al. (2021). Effect of early treatment with fluvoxamine on risk of emergency care and hospitalization among patients with COVID-19. Lancet Glob Health, 9(12), e1741-e1750.",
      doi: "10.1016/example",
      impact: "26.763"
    }
  ];

  const awards: AwardEntry[] = [
    {
      title: "Clinton Global Initiative University Fellowship",
      organization: "Clinton Foundation",
      year: "2017",
      description: "Selected for leadership in global health partnerships and innovative approaches to health system strengthening."
    },
    {
      title: "Gates Foundation Global Health Research Grant",
      organization: "Bill & Melinda Gates Foundation",
      year: "2014",
      amount: "$1.5M",
      description: "Led a project on health data interoperability in Rwanda, focusing on maternal and child health outcomes."
    }
  ];

  const skills: SkillCategory[] = [
    {
      name: "Research Methods",
      skills: ["Clinical Trials", "Mixed Methods", "Epidemiology", "Biostatistics", "Qualitative Research"]
    },
    {
      name: "Technical Skills",
      skills: ["R", "Python", "SQL", "STATA", "REDCap", "DHIS2", "Data Visualization"]
    },
    {
      name: "Areas of Expertise",
      skills: ["Global Health", "Clinical Research", "Digital Health", "Health Systems", "Capacity Building"]
    }
  ];

  return (
    <section className="w-full py-20" id="cv">
      <div className="container mx-auto px-6">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5 }}
        >
          <Card className="bg-surface-elevated/95 backdrop-blur mb-12">
            <CardContent className="p-8">
              <h2 className="text-3xl font-bold text-center mb-16">Professional Experience & Education</h2>
              <div className="grid grid-cols-1 lg:grid-cols-2 gap-12">
                {/* Professional Experience Column */}
                <div>
                  <h3 className="text-2xl font-semibold mb-6 flex items-center gap-2">
                    <Building2 className="w-6 h-6 text-primary" />
                    Professional Experience
                  </h3>
                  {experience.map((entry, index) => (
                    <CVEntry key={entry.title} {...entry} index={index} />
                  ))}
                </div>
                
                {/* Education Column */}
                <div>
                  <h3 className="text-2xl font-semibold mb-6 flex items-center gap-2">
                    <GraduationCap className="w-6 h-6 text-primary" />
                    Education
                  </h3>
                  <div className="space-y-8">
                    {education.map((entry, index) => (
                      <CVEntry 
                        key={entry.title} 
                        {...entry} 
                        index={index + experience.length}
                      />
                    ))}
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* Publications Section */}
          <Card className="bg-surface-elevated/95 backdrop-blur mb-12">
            <CardContent className="p-8">
              <h3 className="text-2xl font-semibold mb-6 flex items-center gap-2">
                <BookOpen className="w-6 h-6 text-primary" />
                Selected Publications
              </h3>
              <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                {publications.map((pub, index) => (
                  <motion.div
                    key={index}
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.5, delay: index * 0.1 }}
                  >
                    <PublicationCard {...pub} />
                  </motion.div>
                ))}
              </div>
            </CardContent>
          </Card>

          {/* Awards & Grants Section */}
          <Card className="bg-surface-elevated/95 backdrop-blur mb-12">
            <CardContent className="p-8">
              <h3 className="text-2xl font-semibold mb-6 flex items-center gap-2">
                <Award className="w-6 h-6 text-primary" />
                Awards & Grants
              </h3>
              <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                {awards.map((award, index) => (
                  <motion.div
                    key={index}
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.5, delay: index * 0.1 }}
                  >
                    <AwardCard {...award} />
                  </motion.div>
                ))}
              </div>
            </CardContent>
          </Card>

          {/* Skills & Expertise Section */}
          <Card className="bg-surface-elevated/95 backdrop-blur">
            <CardContent className="p-8">
              <h3 className="text-2xl font-semibold mb-6 flex items-center gap-2">
                <Binary className="w-6 h-6 text-primary" />
                Skills & Expertise
              </h3>
              <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
                {skills.map((category, index) => (
                  <motion.div
                    key={index}
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.5, delay: index * 0.1 }}
                  >
                    <SkillsCard {...category} />
                  </motion.div>
                ))}
              </div>
            </CardContent>
          </Card>
        </motion.div>
      </div>
    </section>
  );
}

--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/sections/CV.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/sections/ProfessionalJourney.tsx (Timestamp: 2025-02-06 20:11:01) ---
'use client';

import { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { 
  BarChart, 
  FileText, 
  GraduationCap, 
  Building2, 
  BookOpen,
  ExternalLink
} from 'lucide-react';
import { Button } from "@/components/ui/button";

interface TimelineEntry {
  id: string;
  year: string;
  title: string;
  organization: string;
  description: string;
  type: 'experience' | 'education' | 'publication';
  highlights: string[];
  project?: {
    title: string;
    description: string;
    link?: string;
    technologies?: string[];
  };
}

const timelineData: TimelineEntry[] = [
  {
    id: '2023',
    year: '2023 - Present',
    title: 'Research & Strategy Lead',
    organization: 'Purpose Africa',
    type: 'experience',
    description: 'Leading strategic planning, resource mobilization, and results framework for pan-African clinical research and data science capacity-development initiative.',
    highlights: [
      'Leading pan-African clinical research and data science initiatives',
      'Developing comprehensive research strategies and frameworks',
      'Managing multi-country research publication strategies'
    ],
    project: {
      title: 'African Clinical Research Network',
      description: 'Developing infrastructure for multi-country clinical trials and research capacity building',
      technologies: ['Research Strategy', 'Clinical Trials', 'Data Science']
    }
  },
  {
    id: '2021',
    year: '2021 - 2023',
    title: 'Chief Partnerships Officer',
    organization: 'Platform Life Sciences',
    type: 'experience',
    description: 'Led strategic partnership expansion of the TOGETHER adaptive platform clinical trial for COVID-19 therapeutics.',
    highlights: [
      'Expanded clinical trial partnerships across multiple countries',
      'Led medical writing team for trial documentation',
      'Established publication strategy for trial outcomes'
    ],
    project: {
      title: 'TOGETHER Trial',
      description: 'Major COVID-19 therapeutic trial with significant findings published in high-impact journals',
      technologies: ['Clinical Trials', 'Medical Writing', 'Research Strategy']
    }
  },
  {
    id: '2019',
    year: '2019 - 2021',
    title: 'Ph.D. Population & Public Health',
    organization: 'University of British Columbia',
    type: 'education',
    description: 'Doctoral research on health and social networking technologies in harder-to-reach populations.',
    highlights: [
      'Published multiple peer-reviewed articles as lead author',
      'Developed innovative research methodologies',
      'Led international research collaborations'
    ],
    project: {
      title: 'Digital Health Networks',
      description: 'Research on health technology adoption and social networks in healthcare',
      technologies: ['Mixed Methods', 'Network Analysis', 'Digital Health']
    }
  },
  {
    id: '2017',
    year: '2017 - 2020',
    title: 'Managing Director, East Africa',
    organization: 'MTEK Sciences',
    type: 'experience',
    description: 'Expanded business operations into East Africa, delivering technical guidance for data-driven healthcare initiatives.',
    highlights: [
      'Established East African operational presence',
      'Led healthcare data optimization projects',
      'Developed partnerships with government health agencies'
    ],
    project: {
      title: 'Health Data Systems',
      description: 'Implementation of integrated health data systems across multiple countries',
      technologies: ['Health Systems', 'Data Integration', 'Capacity Building']
    }
  }
];

function TimelineDot({ type, isActive }: { type: TimelineEntry['type']; isActive: boolean }) {
  const getIcon = () => {
    switch (type) {
      case 'education':
        return <GraduationCap className="w-4 h-4" />;
      case 'publication':
        return <BookOpen className="w-4 h-4" />;
      default:
        return <Building2 className="w-4 h-4" />;
    }
  };

  return (
    <div className={`
      w-6 h-6 rounded-full flex items-center justify-center transition-all duration-300
      ${isActive ? 'bg-primary text-background' : 'bg-background text-primary'}
      border-2 border-primary
    `}>
      {getIcon()}
    </div>
  );
}

export function ProfessionalJourney() {
  const [activeEntry, setActiveEntry] = useState<string>(timelineData[0].id);
  const currentEntry = timelineData.find(entry => entry.id === activeEntry);

  return (
    <section className="py-20 relative">
      <div className="container mx-auto px-4">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          className="max-w-4xl mx-auto"
        >
          {/* Section Header */}
          <div className="flex items-center gap-3 mb-12">
            <BarChart className="w-8 h-8 text-primary" />
            <h2 className="text-3xl font-bold">Professional Journey</h2>
          </div>

          {/* Horizontal Timeline Navigation */}
          <div className="relative mb-12">
            <div className="absolute left-0 right-0 top-1/2 h-px bg-primary/20 -translate-y-1/2" />
            <div className="relative flex justify-between max-w-3xl mx-auto">
              {timelineData.map((entry) => (
                <motion.button
                  key={entry.id}
                  onClick={() => setActiveEntry(entry.id)}
                  className="flex flex-col items-center gap-2"
                  whileHover={{ scale: 1.05 }}
                >
                  <TimelineDot type={entry.type} isActive={activeEntry === entry.id} />
                  <span className="text-sm font-medium">
                    {entry.year.split(' ')[0]}
                  </span>
                </motion.button>
              ))}
            </div>
          </div>

          {/* Content Area */}
          <AnimatePresence mode="wait">
            {currentEntry && (
              <motion.div
                key={currentEntry.id}
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                exit={{ opacity: 0, y: -20 }}
                className="space-y-6"
              >
                <div className="bg-background/50 backdrop-blur-sm rounded-2xl border border-foreground/10 p-6">
                  <div className="text-sm font-medium text-primary mb-2">
                    {currentEntry.year}
                  </div>
                  <h3 className="text-2xl font-bold mb-1">
                    {currentEntry.title}
                  </h3>
                  <div className="text-foreground/70 font-medium mb-3">
                    {currentEntry.organization}
                  </div>
                  <p className="text-foreground/60 mb-4">
                    {currentEntry.description}
                  </p>

                  <div className="space-y-2">
                    {currentEntry.highlights.map((highlight, i) => (
                      <motion.div
                        key={i}
                        initial={{ opacity: 0, x: -10 }}
                        animate={{ opacity: 1, x: 0 }}
                        transition={{ delay: 0.1 * i }}
                        className="flex items-start gap-2 text-sm text-foreground/70"
                      >
                        <FileText className="w-4 h-4 mt-0.5 text-accent" />
                        <span>{highlight}</span>
                      </motion.div>
                    ))}
                  </div>

                  {currentEntry.project && (
                    <div className="mt-6 pt-6 border-t border-foreground/10">
                      <h4 className="text-lg font-semibold mb-2">
                        Featured Project: {currentEntry.project.title}
                      </h4>
                      <p className="text-foreground/60 mb-4">
                        {currentEntry.project.description}
                      </p>
                      {currentEntry.project.technologies && (
                        <div className="flex flex-wrap gap-2">
                          {currentEntry.project.technologies.map(tech => (
                            <span 
                              key={tech}
                              className="px-2 py-1 text-xs rounded-full bg-primary/10 text-primary"
                            >
                              {tech}
                            </span>
                          ))}
                        </div>
                      )}
                    </div>
                  )}
                </div>
              </motion.div>
            )}
          </AnimatePresence>
        </motion.div>
      </div>
    </section>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/sections/ProfessionalJourney.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/layout/Navigation.tsx (Timestamp: 2025-02-06 17:52:27) ---
'use client';

import { useState, useEffect } from 'react';
import Link from "next/link";
import { motion, AnimatePresence } from 'framer-motion';
import { LineChart, FileText, Grid2X2, Menu, X } from "lucide-react";
import { Button } from '@/components/ui/button';
import { ThemeToggle } from '../theme/theme-toggle';

export default function Navigation() {
  const [isScrolled, setIsScrolled] = useState(false);
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);

  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 0);
    };

    handleScroll();
    window.addEventListener("scroll", handleScroll, { passive: true });
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  const navLinks = [
    { href: 'https://blog.drjforrest.com', icon: FileText, label: 'Blog', external: true },
    { href: 'https://apps.drjforrest.com', icon: Grid2X2, label: 'Apps', external: true },
  ];

  return (
    <motion.header
      initial={{ y: -100 }}
      animate={{ y: 0 }}
      className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${
        isScrolled ? 'bg-background/95 backdrop-blur-sm shadow-sm border-b border-foreground/10' : ''
      }`}
    >
      <div className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
        <nav className="h-16 flex items-center justify-between">
          <div className="flex items-center space-x-8">
            <Link 
              href="/" 
              className="flex items-center gap-2.5 group"
            >
              <motion.div 
                whileHover={{ scale: 1.05 }}
                className="p-2 rounded-lg bg-primary/10 group-hover:bg-primary/15 transition-all duration-200"
              >
                <LineChart className="w-5 h-5 text-primary" />
              </motion.div>
              <span className="text-lg font-semibold text-foreground group-hover:text-primary transition-colors">
                Dr. Jamie I. Forrest
              </span>
            </Link>

            {/* Desktop Navigation */}
            <div className="hidden md:flex items-center gap-6">
              {navLinks.map(({ href, icon: Icon, label, external }) => (
                <Link 
                  key={href}
                  href={href}
                  target={external ? "_blank" : undefined}
                  rel={external ? "noopener noreferrer" : undefined}
                  className="group flex items-center gap-2 text-foreground/70 hover:text-primary transition-all duration-200"
                >
                  <motion.div
                    whileHover={{ scale: 1.1 }}
                    className="p-2 rounded-md group-hover:bg-primary/5"
                  >
                    <Icon className="h-4 w-4" />
                  </motion.div>
                  <span className="font-medium">{label}</span>
                </Link>
              ))}
            </div>
          </div>

          <div className="flex items-center gap-4">
            <ThemeToggle />
            
            {/* Mobile Menu Button */}
            <Button
              variant="ghost"
              size="icon"
              className="md:hidden"
              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
            >
              {isMobileMenuOpen ? (
                <X className="h-5 w-5" />
              ) : (
                <Menu className="h-5 w-5" />
              )}
            </Button>
          </div>
        </nav>

        {/* Mobile Menu */}
        <AnimatePresence>
          {isMobileMenuOpen && (
            <motion.div
              initial={{ opacity: 0, height: 0 }}
              animate={{ opacity: 1, height: 'auto' }}
              exit={{ opacity: 0, height: 0 }}
              className="md:hidden border-t border-foreground/10"
            >
              <div className="py-4 space-y-2">
                {navLinks.map(({ href, icon: Icon, label, external }) => (
                  <Link
                    key={href}
                    href={href}
                    target={external ? "_blank" : undefined}
                    rel={external ? "noopener noreferrer" : undefined}
                    onClick={() => setIsMobileMenuOpen(false)}
                    className="flex items-center gap-2 px-4 py-2 text-foreground/70 hover:text-primary hover:bg-primary/5 rounded-md transition-colors"
                  >
                    <Icon className="h-4 w-4" />
                    <span className="font-medium">{label}</span>
                  </Link>
                ))}
              </div>
            </motion.div>
          )}
        </AnimatePresence>
      </div>
    </motion.header>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/layout/Navigation.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/publications/focus.tsx (Timestamp: 2025-02-06 03:46:19) ---
'use client';

import { motion } from 'framer-motion';
import {
  PieChart,
  Pie,
  Cell,
  ResponsiveContainer,
  Tooltip,
  Legend
} from 'recharts';

interface FocusProps {
  data: Array<{
    name: string;
    papers: number;
  }>;
}

export function Focus({ data }: FocusProps) {
  // Professional color palette that complements our theme
  const COLORS = [
    'rgb(var(--primary))',
    'rgb(var(--accent))',
    'rgb(var(--success))',
    'rgb(var(--muted))',
    'rgb(var(--primary) / 0.7)',
  ];

  // Calculate percentages
  const total = data.reduce((sum, item) => sum + item.papers, 0);
  const dataWithPercentage = data.map(item => ({
    ...item,
    percentage: ((item.papers / total) * 100).toFixed(1)
  }));

  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ duration: 0.5 }}
      className="w-full h-[400px]"
    >
      <ResponsiveContainer width="100%" height="100%">
        <PieChart>
          <Pie
            data={dataWithPercentage}
            cx="50%"
            cy="50%"
            labelLine={false}
            outerRadius={150}
            innerRadius={60}
            dataKey="papers"
            label={({
              cx,
              cy,
              midAngle,
              innerRadius,
              outerRadius,
              percentage,
              name,
            }) => {
              const RADIAN = Math.PI / 180;
              const radius = outerRadius * 1.15;
              const x = cx + radius * Math.cos(-midAngle * RADIAN);
              const y = cy + radius * Math.sin(-midAngle * RADIAN);

              return (
                <motion.text
                  x={x}
                  y={y}
                  fill="currentColor"
                  textAnchor={x > cx ? 'start' : 'end'}
                  dominantBaseline="central"
                  className="text-xs text-foreground/70"
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  transition={{ duration: 0.5, delay: 0.2 }}
                >
                  {name} ({percentage}%)
                </motion.text>
              );
            }}
          >
            {dataWithPercentage.map((entry, index) => (
              <Cell 
                key={`cell-${index}`} 
                fill={COLORS[index % COLORS.length]}
                className="transition-opacity duration-200 hover:opacity-80"
              />
            ))}
          </Pie>
          <Tooltip
            content={({ active, payload }) => {
              if (active && payload && payload.length) {
                const data = payload[0].payload;
                return (
                  <div className="bg-background border border-foreground/10 rounded-lg p-3 shadow-lg">
                    <p className="font-medium text-foreground">{data.name}</p>
                    <p className="text-foreground/70">
                      Publications: {data.papers}
                    </p>
                    <p className="text-foreground/70 text-sm">
                      {data.percentage}% of total
                    </p>
                  </div>
                );
              }
              return null;
            }}
          />
        </PieChart>
      </ResponsiveContainer>
    </motion.div>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/publications/focus.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/publications/impact.tsx (Timestamp: 2025-02-06 03:46:06) ---
'use client';

import { motion } from 'framer-motion';
import {
  BarChart,
  Bar,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  ResponsiveContainer,
  Cell
} from 'recharts';

interface ImpactProps {
  data: Array<{
    name: string;
    count: number;
    tier: string;
  }>;
}

export function Impact({ data }: ImpactProps) {
  // Color mapping based on tier
  const getColor = (tier: string) => {
    switch (tier) {
      case 'Highest Impact':
        return 'rgb(var(--primary))';
      case 'High Impact':
        return 'rgb(var(--accent))';
      default:
        return 'rgb(var(--muted))';
    }
  };

  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ duration: 0.5 }}
      className="w-full h-[400px]"
    >
      <ResponsiveContainer width="100%" height="100%">
        <BarChart
          data={data}
          margin={{
            top: 20,
            right: 30,
            left: 20,
            bottom: 20,
          }}
        >
          <CartesianGrid 
            strokeDasharray="3 3" 
            className="stroke-foreground/10" 
          />
          <XAxis 
            dataKey="name"
            className="text-foreground/70"
            tick={{ fontSize: 12 }}
          />
          <YAxis 
            className="text-foreground/70"
            tick={{ fontSize: 12 }}
            label={{ 
              value: 'Publications',
              angle: -90,
              position: 'insideLeft',
              className: 'text-foreground/70 fill-current'
            }}
          />
          <Tooltip
            content={({ active, payload, label }) => {
              if (active && payload && payload.length) {
                const data = payload[0].payload;
                return (
                  <div className="bg-background border border-foreground/10 rounded-lg p-3 shadow-lg">
                    <p className="font-medium text-foreground">{label}</p>
                    <p className="text-foreground/70">
                      Publications: {data.count}
                    </p>
                    <p className="text-foreground/70 text-sm">
                      Tier: {data.tier}
                    </p>
                  </div>
                );
              }
              return null;
            }}
          />
          <Bar dataKey="count">
            {data.map((entry, index) => (
              <Cell 
                key={`cell-${index}`}
                fill={getColor(entry.tier)}
                className="transition-opacity duration-200 hover:opacity-80"
              />
            ))}
          </Bar>
        </BarChart>
      </ResponsiveContainer>
      
      {/* Legend */}
      <div className="flex justify-center gap-6 mt-4">
        {['Highest Impact', 'High Impact', 'Peer Reviewed'].map((tier) => (
          <div key={tier} className="flex items-center gap-2">
            <div 
              className="w-3 h-3 rounded-full"
              style={{ backgroundColor: getColor(tier) }}
            />
            <span className="text-sm text-foreground/70">{tier}</span>
          </div>
        ))}
      </div>
    </motion.div>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/publications/impact.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/publications/timeline.tsx (Timestamp: 2025-02-06 03:45:54) ---
'use client';

import { motion } from 'framer-motion';
import {
  LineChart,
  Line,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  ResponsiveContainer
} from 'recharts';

interface TimelineProps {
  data: Array<{
    year: string;
    count: number;
  }>;
}

export function Timeline({ data }: TimelineProps) {
  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ duration: 0.5 }}
      className="w-full h-[400px]"
    >
      <ResponsiveContainer width="100%" height="100%">
        <LineChart
          data={data}
          margin={{
            top: 20,
            right: 30,
            left: 20,
            bottom: 20,
          }}
        >
          <CartesianGrid 
            strokeDasharray="3 3" 
            className="stroke-foreground/10" 
          />
          <XAxis 
            dataKey="year"
            className="text-foreground/70"
            tick={{ fontSize: 12 }}
          />
          <YAxis 
            className="text-foreground/70"
            tick={{ fontSize: 12 }}
            label={{ 
              value: 'Publications',
              angle: -90,
              position: 'insideLeft',
              className: 'text-foreground/70 fill-current'
            }}
          />
          <Tooltip
            content={({ active, payload, label }) => {
              if (active && payload && payload.length) {
                return (
                  <div className="bg-background border border-foreground/10 rounded-lg p-3 shadow-lg">
                    <p className="font-medium text-foreground">{label}</p>
                    <p className="text-foreground/70">
                      Publications: {payload[0].value}
                    </p>
                  </div>
                );
              }
              return null;
            }}
          />
          <Line
            type="monotone"
            dataKey="count"
            stroke="rgb(var(--primary))"
            strokeWidth={2}
            dot={{
              r: 4,
              fill: "rgb(var(--background))",
              stroke: "rgb(var(--primary))",
              strokeWidth: 2,
            }}
            activeDot={{
              r: 6,
              fill: "rgb(var(--primary))",
              stroke: "rgb(var(--background))",
              strokeWidth: 2,
            }}
          />
        </LineChart>
      </ResponsiveContainer>
    </motion.div>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/publications/timeline.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/providers/ClientProvider.tsx (Timestamp: 2025-02-06 20:27:42) ---
'use client';

import { motion, AnimatePresence } from 'framer-motion';

export function ClientProvider({
  children
}: {
  children: React.ReactNode;
}) {
  return (
    <AnimatePresence mode="wait">
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        exit={{ opacity: 0 }}
      >
        {children}
      </motion.div>
    </AnimatePresence>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/providers/ClientProvider.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/theme/theme-toggle.tsx (Timestamp: 2025-02-06 07:40:05) ---
"use client";

import * as React from "react";
import { Moon, Sun } from "lucide-react";
import { useTheme } from "next-themes";

export function ThemeToggle() {
  const { theme, setTheme } = useTheme();
  const [mounted, setMounted] = React.useState(false);

  React.useEffect(() => {
    setMounted(true);
  }, []);

  if (!mounted) {
    return null;
  }

  return (
    <button
      onClick={() => setTheme(theme === "light" ? "dark" : "light")}
      className="relative rounded-lg p-2 bg-primary/10 hover:bg-primary/15 text-primary transition-all duration-200 hover:scale-105"
      aria-label="Toggle theme"
    >
      <Sun className="h-5 w-5 rotate-0 scale-100 transition-all duration-300 dark:-rotate-90 dark:scale-0" />
      <Moon className="absolute h-5 w-5 rotate-90 scale-0 transition-all duration-300 dark:rotate-0 dark:scale-100 left-2 top-2" />
    </button>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/theme/theme-toggle.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/publication-dashboard/index.tsx (Timestamp: 2025-02-06 06:50:09) ---
'use client';

import React from 'react';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Card } from '@/components/ui/card';
import { Timeline } from './Timeline';
import { Impact } from './Impact';
import { Focus } from './Focus';
import { Clock, TrendingUp, Target } from 'lucide-react';

export function PublicationDashboard() {
  const publications = [
    {"year": "2009", "count": 1},
    {"year": "2011", "count": 1},
    {"year": "2012", "count": 3},
    {"year": "2013", "count": 2},
    {"year": "2014", "count": 7},
    {"year": "2015", "count": 5},
    {"year": "2016", "count": 4},
    {"year": "2017", "count": 3},
    {"year": "2018", "count": 2},
    {"year": "2019", "count": 1},
    {"year": "2020", "count": 2},
    {"year": "2021", "count": 5},
    {"year": "2022", "count": 7},
    {"year": "2023", "count": 2},
    {"year": "2024", "count": 2}
  ];

  const journalImpact = [
    { name: 'NEJM', count: 2, tier: 'Highest Impact' as const },
    { name: 'Lancet', count: 7, tier: 'Highest Impact' as const },
    { name: 'JAMA', count: 2, tier: 'High Impact' as const },
    { name: 'Other', count: 35, tier: 'Peer Reviewed' as const }
  ];

  const researchFocus = [
    { name: 'COVID-19', papers: 12 },
    { name: 'HIV/AIDS', papers: 15 },
    { name: 'Health Systems', papers: 8 },
    { name: 'Digital Health', papers: 6 },
    { name: 'Public Health', papers: 5 }
  ];

  return (
    <section className="w-full py-20" id="publications">
      <div className="container mx-auto px-6">
        <Card className="p-6 bg-surface">
          <Tabs defaultValue="timeline" className="w-full">
            <div className="mb-6">
              <h3 className="text-2xl font-semibold mb-2">Publication Analysis</h3>
              <p className="text-sm text-content-muted mb-4">
                Track publication history, impact, and research focus areas
              </p>
              <TabsList className="grid w-full grid-cols-3 bg-background p-1 rounded-lg">
                <TabsTrigger
                  value="timeline"
                  className="data-[state=active]:bg-primary data-[state=active]:text-primary-foreground"
                >
                  <Clock className="h-4 w-4 mr-2" />
                  Timeline
                </TabsTrigger>
                <TabsTrigger
                  value="impact"
                  className="data-[state=active]:bg-primary data-[state=active]:text-primary-foreground"
                >
                  <TrendingUp className="h-4 w-4 mr-2" />
                  Impact
                </TabsTrigger>
                <TabsTrigger
                  value="focus"
                  className="data-[state=active]:bg-primary data-[state=active]:text-primary-foreground"
                >
                  <Target className="h-4 w-4 mr-2" />
                  Focus Areas
                </TabsTrigger>
              </TabsList>
            </div>

            <div className="mt-4">
              <TabsContent value="timeline" className="m-0">
                <Timeline data={publications} />
              </TabsContent>

              <TabsContent value="impact" className="m-0">
                <Impact data={journalImpact} />
              </TabsContent>

              <TabsContent value="focus" className="m-0">
                <Focus data={researchFocus} />
              </TabsContent>
            </div>
          </Tabs>

          {/* Quick Stats */}
          <div className="grid grid-cols-1 md:grid-cols-4 gap-4 mt-8 p-4 bg-surface-elevated rounded-lg">
            <div className="text-center">
              <div className="text-2xl font-bold text-primary">
                {publications.reduce((sum, pub) => sum + pub.count, 0)}
              </div>
              <div className="text-sm text-content-muted">Total Publications</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold text-primary">
                {journalImpact.filter(j => j.tier === 'Highest Impact').reduce((sum, j) => sum + j.count, 0)}
              </div>
              <div className="text-sm text-content-muted">High Impact Papers</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold text-primary">
                {Math.max(...publications.map(p => p.count))}
              </div>
              <div className="text-sm text-content-muted">Most Papers in a Year</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold text-primary">
                {researchFocus.length}
              </div>
              <div className="text-sm text-content-muted">Research Areas</div>
            </div>
          </div>
        </Card>
      </div>
    </section>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/publication-dashboard/index.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/publication-dashboard/Focus.tsx (Timestamp: 2025-02-06 06:49:30) ---
'use client';

import React from 'react';
import { Card, CardContent } from "@/components/ui/card";
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';
import { EnhancedTooltip } from '@/components/ui/enhanced-tooltip';
import type { ResearchFocus } from '@/types/publications';

interface FocusProps {
  data: ResearchFocus[];
}

export function Focus({ data }: FocusProps) {
  // Sort data by number of papers in descending order
  const sortedData = [...data].sort((a, b) => b.papers - a.papers);

  return (
    <Card className="bg-surface">
      <CardContent className="pt-6">
        <div className="h-64">
          <ResponsiveContainer width="100%" height="100%">
            <BarChart 
              data={sortedData}
              margin={{ top: 20, right: 30, left: 20, bottom: 20 }}
              layout="vertical"
            >
              <CartesianGrid 
                strokeDasharray="3 3" 
                className="opacity-30"
                stroke="var(--border)"
              />
              <XAxis 
                type="number"
                tick={{ fill: 'var(--content-muted)' }}
                stroke="var(--border)"
                label={{ 
                  value: 'Number of Publications', 
                  position: 'insideBottom',
                  offset: -15,
                  style: { fill: 'var(--content-muted)' }
                }}
              />
              <YAxis 
                type="category"
                dataKey="name"
                tick={{ fill: 'var(--content-muted)' }}
                stroke="var(--border)"
                width={120}
              />
              <Tooltip
                content={
                  <EnhancedTooltip
                    formatter={(value) => `${value} publications`}
                  />
                }
              />
              <Bar 
                dataKey="papers" 
                fill="var(--primary)"
                radius={[0, 4, 4, 0]}
              />
            </BarChart>
          </ResponsiveContainer>
        </div>
        
        {/* Summary */}
        <div className="mt-6">
          <h4 className="text-sm font-medium mb-2">Research Focus Distribution</h4>
          <div className="text-sm text-content-muted">
            Primary focus on {sortedData[0].name} ({sortedData[0].papers} papers) and {sortedData[1].name} ({sortedData[1].papers} papers)
          </div>
        </div>
      </CardContent>
    </Card>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/publication-dashboard/Focus.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/publication-dashboard/Impact.tsx (Timestamp: 2025-02-06 18:05:51) ---
'use client';

import React from 'react';
import { Card, CardContent } from "@/components/ui/card";
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';
import { EnhancedTooltip } from '@/components/ui/enhanced-tooltip';
import type { JournalImpact } from '@/types/publications';

interface ImpactProps {
  data: JournalImpact[];
}


export function Impact({ data }: ImpactProps) {
  return (
    <Card className="bg-surface">
      <CardContent className="pt-6">
        <div className="h-64">
          <ResponsiveContainer width="100%" height="100%">
            <BarChart 
              data={data}
              margin={{ top: 20, right: 30, left: 20, bottom: 20 }}
            >
              <CartesianGrid 
                strokeDasharray="3 3" 
                className="opacity-30"
                stroke="var(--border)"
              />
              <XAxis 
                dataKey="name" 
                tick={{ fill: 'var(--content-muted)' }}
                stroke="var(--border)"
              />
              <YAxis 
                tick={{ fill: 'var(--content-muted)' }}
                stroke="var(--border)"
                label={{ 
                  value: 'Number of Publications', 
                  angle: -90, 
                  position: 'insideLeft',
                  style: { fill: 'var(--content-muted)' }
                }}
              />
              <Tooltip
                content={
                  <EnhancedTooltip
                    formatter={(value, name, props) => [
                      `${value} publications`,
                      props.payload.tier
                    ]}
                  />
                }
              />
              <Bar 
                dataKey="count" 
                fill="var(--primary)"
                radius={[4, 4, 0, 0]}
              />
            </BarChart>
          </ResponsiveContainer>
        </div>
        
        {/* Legend */}
        <div className="mt-6 grid grid-cols-3 gap-4">
          {['Highest Impact', 'High Impact', 'Peer Reviewed'].map((tier) => (
            <div key={tier} className="text-center">
              <div className="text-xs text-content-muted">{tier}</div>
              <div className="text-sm font-medium">
                {data.filter(d => d.tier === tier).reduce((sum, d) => sum + d.count, 0)} papers
              </div>
            </div>
          ))}
        </div>
      </CardContent>
    </Card>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/publication-dashboard/Impact.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/publication-dashboard/Timeline.tsx (Timestamp: 2025-02-06 06:49:06) ---
'use client';

import React, { useState } from 'react';
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, ReferenceLine } from 'recharts';
import { EnhancedTooltip } from '@/components/ui/enhanced-tooltip';
import { RotateCcw } from 'lucide-react';
import type { TimelineData, MilestoneMarker } from '@/types/publications';

interface TimelineProps {
  data: TimelineData[];
}

export function Timeline({ data }: TimelineProps) {
  const [selectedYear, setSelectedYear] = useState<string | null>(null);

  // Calculate cumulative total for each year
  const cumulativeData = data.map((item, index) => {
    const previousTotal = index > 0 ? 
      data.slice(0, index).reduce((sum, d) => sum + d.count, 0) : 0;
    return {
      ...item,
      total: previousTotal + item.count
    };
  });

  // Find significant milestones (years with 5+ publications)
  const milestones = cumulativeData.reduce<MilestoneMarker[]>((acc, curr) => {
    if (curr.count >= 5) {
      acc.push({
        year: curr.year,
        label: `${curr.count} publications`
      });
    }
    return acc;
  }, []);

  return (
    <Card className="bg-surface">
      <CardContent className="pt-6">
        <div className="relative">
          <div className="absolute top-0 right-0 z-10">
            <Button
              variant="outline"
              size="sm"
              onClick={() => setSelectedYear(null)}
              disabled={!selectedYear}
              className="text-primary hover:text-primary-dark"
            >
              <RotateCcw className="h-4 w-4" />
            </Button>
          </div>
          
          <div className="h-64">
            <ResponsiveContainer width="100%" height="100%">
              <LineChart 
                data={cumulativeData}
                margin={{ top: 20, right: 30, left: 20, bottom: 20 }}
              >
                <CartesianGrid 
                  strokeDasharray="3 3" 
                  className="opacity-30"
                  stroke="var(--border)"
                />
                <XAxis 
                  dataKey="year" 
                  tick={{ fill: 'var(--content-muted)' }}
                  stroke="var(--border)"
                />
                <YAxis 
                  tick={{ fill: 'var(--content-muted)' }}
                  stroke="var(--border)"
                  label={{ 
                    value: 'Publications', 
                    angle: -90, 
                    position: 'insideLeft',
                    style: { fill: 'var(--content-muted)' }
                  }}
                />
                
                {/* Annual publications line */}
                <Line 
                  type="monotone" 
                  dataKey="count"
                  name="Annual"
                  stroke="var(--primary)"
                  strokeWidth={2}
                  dot={{ r: 4, strokeWidth: 2, fill: 'var(--background)', stroke: 'var(--primary)' }}
                  activeDot={{ 
                    r: 6,
                    fill: 'var(--primary)',
                    onClick: (props: any) => {
                      const year = props.payload.year;
                      setSelectedYear(selectedYear === year ? null : year);
                    }
                  }}
                />

                {/* Cumulative total line */}
                <Line 
                  type="monotone" 
                  dataKey="total"
                  name="Cumulative"
                  stroke="var(--primary-light)"
                  strokeWidth={2}
                  dot={{ r: 4, strokeWidth: 2, fill: 'var(--background)', stroke: 'var(--primary-light)' }}
                  activeDot={{ 
                    r: 6,
                    fill: 'var(--primary-light)',
                    onClick: (props: any) => {
                      const year = props.payload.year;
                      setSelectedYear(selectedYear === year ? null : year);
                    }
                  }}
                />

                {/* Milestone markers */}
                {milestones.map((milestone, index) => (
                  <ReferenceLine
                    key={index}
                    x={milestone.year}
                    stroke="var(--content-muted)"
                    strokeDasharray="3 3"
                    label={{
                      value: milestone.label,
                      position: 'top',
                      fill: 'var(--content-muted)',
                      fontSize: 12
                    }}
                  />
                ))}

                <Tooltip
                  content={
                    <EnhancedTooltip
                      solutions={{
                        count: "Annual publications",
                        total: "Cumulative total"
                      }}
                      formatter={(value) => `${value} publications`}
                    />
                  }
                />
              </LineChart>
            </ResponsiveContainer>
          </div>

          {/* Context Box */}
          {selectedYear && (
            <div className="mt-6 p-4 bg-surface-muted rounded-lg">
              <h4 className="text-sm font-medium mb-2">{selectedYear} Publication Metrics</h4>
              <div className="grid grid-cols-2 gap-4">
                <div>
                  <p className="text-xs text-content-muted">Annual Publications</p>
                  <p className="text-sm font-medium">
                    {cumulativeData.find(d => d.year === selectedYear)?.count}
                  </p>
                </div>
                <div>
                  <p className="text-xs text-content-muted">Cumulative Total</p>
                  <p className="text-sm font-medium">
                    {cumulativeData.find(d => d.year === selectedYear)?.total}
                  </p>
                </div>
              </div>
            </div>
          )}
        </div>
      </CardContent>
    </Card>
  );
}
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/publication-dashboard/Timeline.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/hooks/use-scroll-animation.ts (Timestamp: 2025-02-06 15:13:28) ---
'use client';

import { useEffect, useState, useRef } from 'react';

export const useScrollAnimation = () => {
  const [isVisible, setIsVisible] = useState(false);
  const ref = useRef<HTMLDivElement>(null);

  useEffect(() => {
    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting) {
          setIsVisible(true);
          observer.unobserve(entry.target);
        }
      },
      {
        threshold: 0.1,
        rootMargin: '50px',
      }
    );

    if (ref.current) {
      observer.observe(ref.current);
    }

    return () => {
      if (ref.current) {
        observer.unobserve(ref.current);
      }
    };
  }, []);

  return { ref, isVisible };
};
--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/hooks/use-scroll-animation.ts ---

--- End Project Code ---
