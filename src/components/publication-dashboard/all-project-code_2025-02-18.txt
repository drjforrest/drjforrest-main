PROJECT INVENTORY 2025-02-18
Project: 
Timestamp: 2025-02-18 19:13:07
Root Directory: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/publication-dashboard/

--- Begin Project Code ---

--- File: (Project Directory Structure) ---
├── Focus.tsx 
├── Impact.tsx 
├── Timeline.tsx 
└── index.tsx 

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/publication-dashboard/index.tsx (Timestamp: 2025-02-17 00:57:44) ---
'use client';

import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { Timeline } from './Timeline';
import { Impact } from './Impact';
import { Focus } from './Focus';
import { FileText } from "lucide-react";
import { Tabs, TabsList, TabsTrigger, TabsContent } from '@/components/ui/tabs';
import { SectionTitle } from '@/components/ui/section-title';

export function PublicationDashboard() {
  const [activeTab, setActiveTab] = useState('timeline');

  return (
    <div className="w-full max-w-6xl mx-auto px-4">
      {/* Stats Cards */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
        <div className="bg-white rounded-lg shadow-sm p-6">
          <h4 className="text-xl font-bold text-[#26385C]">53 Publications</h4>
          <p className="text-sm text-[#26385C]/70">Peer-reviewed articles spanning 15 years</p>
        </div>
        <div className="bg-white rounded-lg shadow-sm p-6">
          <h4 className="text-xl font-bold text-[#26385C]">15+ High Impact</h4>
          <p className="text-sm text-[#26385C]/70">Publications in leading medical journals</p>
        </div>
        <div className="bg-white rounded-lg shadow-sm p-6">
          <h4 className="text-xl font-bold text-[#26385C]">Global Reach</h4>
          <p className="text-sm text-[#26385C]/70">Research implemented across 20+ countries</p>
        </div>
      </div>

      {/* Visualization Area */}
      <div className="bg-white rounded-lg shadow-sm p-8 mb-16">
        <Tabs value={activeTab} onValueChange={setActiveTab}>
          <TabsList className="bg-gray-50 border border-[#26385C]/10 p-1 mb-8">
            <TabsTrigger value="timeline">Publication Timeline</TabsTrigger>
            <TabsTrigger value="impact">Journal Impact</TabsTrigger>
            <TabsTrigger value="focus">Research Focus</TabsTrigger>
          </TabsList>

          <TabsContent value="timeline">
            <Timeline />
          </TabsContent>
          <TabsContent value="impact">
            <Impact />
          </TabsContent>
          <TabsContent value="focus">
            <Focus />
          </TabsContent>
        </Tabs>
      </div>

      {/* Research Areas */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        {[
          {
            title: "Clinical Trial Design",
            description: "Leading innovative approaches in clinical research methodology",
            count: 12,
          },
          {
            title: "Global Health Systems",
            description: "Strengthening healthcare delivery and accessibility",
            count: 15,
          },
          {
            title: "Health Analytics",
            description: "Data-driven insights for public health decision making",
            count: 8,
          }
        ].map((area, index) => (
          <div key={area.title} className="bg-white rounded-lg shadow-sm p-6">
            <div className="flex items-start gap-4">
              <div className="p-3 rounded-xl bg-[#2A9D8F]/10">
                <FileText className="w-6 h-6 text-[#2A9D8F]" />
              </div>
              <div>
                <h4 className="text-xl font-bold text-[#26385C] mb-2">{area.title}</h4>
                <p className="text-sm text-[#26385C]/70 mb-2">{area.description}</p>
                <p className="text-sm font-medium text-[#2A9D8F]">
                  {area.count} publications
                </p>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}

--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/publication-dashboard/index.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/publication-dashboard/Focus.tsx (Timestamp: 2025-02-16 14:46:40) ---
'use client';

import React from 'react';
import { PieChart, Pie, Cell, ResponsiveContainer, Tooltip } from 'recharts';
import { motion } from 'framer-motion';

const focusData = [
  { name: 'Clinical Trials', papers: 15, color: '#26385C' },  // Deep navy
  { name: 'Global Health', papers: 12, color: '#E63946' },    // Red
  { name: 'Health Systems', papers: 10, color: '#2A9D8F' },   // Teal
  { name: 'Digital Health', papers: 8, color: '#457B9D' },    // Blue
  { name: 'Public Health', papers: 5, color: '#1D3557' }      // Dark blue
];

const CustomTooltip = ({ active, payload }: any) => {
  if (active && payload && payload.length) {
    const data = payload[0].payload;
    return (
      <div className="bg-white/90 backdrop-blur-sm p-4 rounded-lg shadow-lg border border-primary/10">
        <p className="font-medium text-primary">{data.name}</p>
        <p className="text-sm text-foreground/70">
          <span className="font-medium">{data.papers}</span> publications
        </p>
        <p className="text-sm text-foreground/70">
          {((data.papers / focusData.reduce((acc, curr) => acc + curr.papers, 0)) * 100).toFixed(1)}% of total
        </p>
      </div>
    );
  }
  return null;
};

export function Focus() {
  return (
    <div className="space-y-8">
      {/* Summary Text */}
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="text-center space-y-4"
      >
        <h3 className="text-xl font-semibold text-primary">Research Focus Areas</h3>
        <p className="text-foreground/70 max-w-2xl mx-auto">
          Distribution of research publications across key areas of expertise,
          highlighting a balanced approach to global health challenges.
        </p>
      </motion.div>

      {/* Legend */}
      <motion.div 
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.2 }}
        className="flex flex-wrap justify-center gap-6"
      >
        {focusData.map((item, index) => (
          <motion.div
            key={item.name}
            className="flex items-center gap-2"
            initial={{ opacity: 0, x: -20 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ delay: index * 0.1 }}
          >
            <div 
              className="w-3 h-3 rounded-full" 
              style={{ backgroundColor: item.color }} 
            />
            <span className="text-sm text-foreground/70">
              {item.name} ({item.papers})
            </span>
          </motion.div>
        ))}
      </motion.div>

      {/* Chart */}
      <div className="h-[400px] relative">
        <ResponsiveContainer width="100%" height="100%">
          <PieChart>
            <Pie
              data={focusData}
              cx="50%"
              cy="50%"
              innerRadius={80}
              outerRadius={160}
              paddingAngle={2}
              dataKey="papers"
            >
              {focusData.map((entry, index) => (
                <Cell 
                  key={entry.name}
                  fill={entry.color}
                  stroke="rgba(255,255,255,0.2)"
                  strokeWidth={2}
                />
              ))}
            </Pie>
            <Tooltip content={<CustomTooltip />} />
          </PieChart>
        </ResponsiveContainer>

        {/* Center Content */}
        <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-center">
          <div className="text-3xl font-bold text-primary">
            {focusData.reduce((acc, curr) => acc + curr.papers, 0)}
          </div>
          <div className="text-sm text-foreground/70">
            Total Publications
          </div>
        </div>
      </div>

      {/* Key Insights */}
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ delay: 0.4 }}
        className="grid grid-cols-1 md:grid-cols-3 gap-6"
      >
        {[
          {
            title: "Clinical Focus",
            description: "Strong emphasis on clinical trials and evidence generation"
          },
          {
            title: "Global Reach",
            description: "Significant contributions to global health initiatives"
          },
          {
            title: "Digital Innovation",
            description: "Growing focus on digital health solutions"
          }
        ].map((insight, index) => (
          <motion.div
            key={insight.title}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.5 + (index * 0.1) }}
            className="p-4 bg-white/50 backdrop-blur-sm rounded-lg border border-primary/10"
          >
            <h4 className="font-medium text-primary mb-2">{insight.title}</h4>
            <p className="text-sm text-foreground/70">{insight.description}</p>
          </motion.div>
        ))}
      </motion.div>
    </div>
  );
}

--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/publication-dashboard/Focus.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/publication-dashboard/Impact.tsx (Timestamp: 2025-02-17 00:31:47) ---
'use client';

import React from 'react';
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';
import { motion } from 'framer-motion';

const journalData = [
  { 
    name: 'N Engl J Med',
    count: 2,
    tier: 'Highest Impact',
    color: '#26385C'  // Deep navy
  },
  { 
    name: 'Lancet Global Health',
    count: 2,
    tier: 'Highest Impact',
    color: '#26385C'
  },
  { 
    name: 'Lancet HIV',
    count: 5,
    tier: 'High Impact',
    color: '#2A9D8F'  // Teal
  },
  { 
    name: 'Am J Trop Med Hyg',
    count: 5,
    tier: 'High Impact',
    color: '#2A9D8F'
  },
  { 
    name: 'JAMA Netw Open',
    count: 2,
    tier: 'Impact Factor < 20',
    color: '#2A9D8F'
  }
];

const CustomTooltip = ({ active, payload, label }: any) => {
  if (active && payload && payload.length) {
    return (
      <div className="bg-white/90 backdrop-blur-sm p-4 border border-primary/10 rounded-lg shadow-lg">
        <p className="font-medium text-primary">{label}</p>
        <p className="text-sm text-foreground/70">
          <span className="font-medium">{payload[0].value}</span> publications
        </p>
        <p className="text-sm text-foreground/70">
          Impact Tier: <span className="font-medium">{payload[0].payload.tier}</span>
        </p>
      </div>
    );
  }
  return null;
};

export function Impact() {
  return (
    <div className="space-y-8">
      {/* Chart */}
      <motion.div 
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.5 }}
        className="h-[400px] w-full"
      >
        <ResponsiveContainer width="100%" height="100%">
          <BarChart
            data={journalData}
            margin={{ top: 20, right: 30, left: 20, bottom: 60 }}
            barSize={60}
          >
            <CartesianGrid 
              strokeDasharray="3 3" 
              vertical={false} 
              stroke="#26385C" 
              opacity={0.1} 
            />
            <XAxis
              dataKey="name"
              stroke="#26385C"
              fontSize={12}
              tickLine={false}
              angle={-45}
              textAnchor="end"
              interval={0}
              height={60}
            />
            <YAxis
              stroke="#26385C"
              fontSize={12}
              tickLine={false}
              axisLine={{ strokeWidth: 1, stroke: '#26385C', opacity: 0.2 }}
            />
            <Tooltip content={<CustomTooltip />} />
            <Bar 
              dataKey="count" 
              fill="#2A9D8F"  // Set default fill to teal
              radius={[4, 4, 0, 0]}
            >
              {journalData.map((entry, index) => (
                <motion.rect
                  key={`bar-${index}`}
                  fill={entry.color}
                  initial={{ y: 400, height: 0 }}
                  animate={{ 
                    y: undefined,
                    height: undefined 
                  }}
                  transition={{
                    duration: 0.5,
                    delay: index * 0.1
                  }}
                />
              ))}
            </Bar>
          </BarChart>
        </ResponsiveContainer>
      </motion.div>

      {/* Summary Text */}
      <motion.p
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ delay: 0.7 }}
        className="text-center text-foreground/70 text-sm"
      >
        Publications across leading medical and scientific journals, 
        with significant contributions to high-impact factor publications
      </motion.p>
    </div>
  );
}

--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/publication-dashboard/Impact.tsx ---

--- File: /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/publication-dashboard/Timeline.tsx (Timestamp: 2025-02-16 23:14:31) ---
'use client';

import React, { useState } from 'react';
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';
import { motion } from 'framer-motion';
import { Button } from '@/components/ui/button';

const yearlyData = [
  { year: '2009', papers: 1 },
  { year: '2010', papers: 0 },
  { year: '2011', papers: 1 },
  { year: '2012', papers: 2 },
  { year: '2013', papers: 2 },
  { year: '2014', papers: 7 },
  { year: '2015', papers: 6 },
  { year: '2016', papers: 5 },
  { year: '2017', papers: 4 },
  { year: '2018', papers: 3 },
  { year: '2019', papers: 1 },
  { year: '2020', papers: 3 },
  { year: '2021', papers: 5 },
  { year: '2022', papers: 9 },
  { year: '2023', papers: 2 },
  { year: '2024', papers: 2 }
].map((item, index, array) => ({
  ...item,
  total: array.slice(0, index + 1).reduce((sum, curr) => sum + curr.papers, 0)
}));

const CustomTooltip = ({ active, payload, label }: any) => {
  if (active && payload && payload.length) {
    return (
      <div className="bg-white/90 backdrop-blur-sm p-4 rounded-lg shadow-lg border border-primary/10">
        <p className="font-medium text-primary">{label}</p>
        <div className="mt-2 space-y-1">
          <p className="text-sm text-foreground/70">
            Publications: <span className="font-medium">{payload[0].value}</span>
          </p>
          {payload[1] && (
            <p className="text-sm text-foreground/70">
              Cumulative Total: <span className="font-medium">{payload[1].value}</span>
            </p>
          )}
        </div>
      </div>
    );
  }
  return null;
};

export function Timeline() {
  const [showAnnual, setShowAnnual] = useState(false);
  
  return (
    <div className="space-y-8">
      {/* Graph Controls */}
      <div className="flex justify-end">
        <Button
          variant="outline"
          onClick={() => setShowAnnual(!showAnnual)}
          className="text-sm"
        >
          {showAnnual ? 'Hide' : 'Show'} Annual Chart
        </Button>
      </div>

      {/* Chart */}
      <motion.div 
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.3 }}
        className="h-[400px] w-full"
      >
        <ResponsiveContainer width="100%" height="100%">
          <BarChart 
            data={yearlyData}
            margin={{ top: 20, right: 30, left: 20, bottom: 40 }}
            barSize={40}
          >
            <CartesianGrid 
              strokeDasharray="3 3" 
              vertical={false} 
              stroke="#26385C" 
              opacity={0.1} 
            />
            
            <XAxis 
              dataKey="year" 
              stroke="#26385C"
              fontSize={12}
              tickLine={false}
              angle={-45}
              textAnchor="end"
              height={60}
            />
            
            <YAxis 
              stroke="#26385C"
              fontSize={12}
              tickLine={false}
              axisLine={{ strokeWidth: 1, stroke: '#26385C', opacity: 0.2 }}
            />
            
            <Tooltip content={<CustomTooltip />} />
            
            {showAnnual && (
              <Bar 
                dataKey="papers" 
                fill="#26385C"
                radius={[4, 4, 0, 0]}
              />
            )}
            
            <Bar 
              dataKey="total" 
              fill="#26385C"
              radius={[4, 4, 0, 0]}
              opacity={showAnnual ? 0.3 : 0.8}
            />
          </BarChart>
        </ResponsiveContainer>
      </motion.div>
    </div>
  );
}

--- End of /Users/drjforrest/Development/DevProjects/WebDev/new-main/src/components/publication-dashboard/Timeline.tsx ---

--- End Project Code ---
